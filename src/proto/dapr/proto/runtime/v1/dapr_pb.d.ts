//
//Copyright 2021 The Dapr Authors
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//http://www.apache.org/licenses/LICENSE-2.0
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=none"
// @generated from file dapr/proto/runtime/v1/dapr.proto (package dapr.proto.runtime.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { ConfigurationItem, Etag, InvokeRequest, InvokeResponseSchema, JobFailurePolicy, StateItem, StateOptions, StateOptions_StateConsistency, StreamPayload } from "../../common/v1/common_pb";
import type { TopicEventRequest, TopicEventResponse } from "./appcallback_pb";
import type { Any, EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file dapr/proto/runtime/v1/dapr.proto.
 */
export declare const file_dapr_proto_runtime_v1_dapr: GenFile;

/**
 * InvokeServiceRequest represents the request message for Service invocation.
 *
 * @generated from message dapr.proto.runtime.v1.InvokeServiceRequest
 */
export declare type InvokeServiceRequest = Message<"dapr.proto.runtime.v1.InvokeServiceRequest"> & {
  /**
   * Required. Callee's app id.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. message which will be delivered to callee.
   *
   * @generated from field: dapr.proto.common.v1.InvokeRequest message = 3;
   */
  message?: InvokeRequest;
};

/**
 * Describes the message dapr.proto.runtime.v1.InvokeServiceRequest.
 * Use `create(InvokeServiceRequestSchema)` to create a new message.
 */
export declare const InvokeServiceRequestSchema: GenMessage<InvokeServiceRequest>;

/**
 * GetStateRequest is the message to get key-value states from specific state store.
 *
 * @generated from message dapr.proto.runtime.v1.GetStateRequest
 */
export declare type GetStateRequest = Message<"dapr.proto.runtime.v1.GetStateRequest"> & {
  /**
   * The name of state store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The key of the desired state
   *
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * The read consistency of the state store.
   *
   * @generated from field: dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
   */
  consistency: StateOptions_StateConsistency;

  /**
   * The metadata which will be sent to state store components.
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetStateRequest.
 * Use `create(GetStateRequestSchema)` to create a new message.
 */
export declare const GetStateRequestSchema: GenMessage<GetStateRequest>;

/**
 * GetBulkStateRequest is the message to get a list of key-value states from specific state store.
 *
 * @generated from message dapr.proto.runtime.v1.GetBulkStateRequest
 */
export declare type GetBulkStateRequest = Message<"dapr.proto.runtime.v1.GetBulkStateRequest"> & {
  /**
   * The name of state store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The keys to get.
   *
   * @generated from field: repeated string keys = 2;
   */
  keys: string[];

  /**
   * The number of parallel operations executed on the state store for a get operation.
   *
   * @generated from field: int32 parallelism = 3;
   */
  parallelism: number;

  /**
   * The metadata which will be sent to state store components.
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetBulkStateRequest.
 * Use `create(GetBulkStateRequestSchema)` to create a new message.
 */
export declare const GetBulkStateRequestSchema: GenMessage<GetBulkStateRequest>;

/**
 * GetBulkStateResponse is the response conveying the list of state values.
 *
 * @generated from message dapr.proto.runtime.v1.GetBulkStateResponse
 */
export declare type GetBulkStateResponse = Message<"dapr.proto.runtime.v1.GetBulkStateResponse"> & {
  /**
   * The list of items containing the keys to get values for.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.BulkStateItem items = 1;
   */
  items: BulkStateItem[];
};

/**
 * Describes the message dapr.proto.runtime.v1.GetBulkStateResponse.
 * Use `create(GetBulkStateResponseSchema)` to create a new message.
 */
export declare const GetBulkStateResponseSchema: GenMessage<GetBulkStateResponse>;

/**
 * BulkStateItem is the response item for a bulk get operation.
 * Return values include the item key, data and etag.
 *
 * @generated from message dapr.proto.runtime.v1.BulkStateItem
 */
export declare type BulkStateItem = Message<"dapr.proto.runtime.v1.BulkStateItem"> & {
  /**
   * state item key
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The byte array data
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * The entity tag which represents the specific version of data.
   * ETag format is defined by the corresponding data store.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;

  /**
   * The error that was returned from the state store in case of a failed get operation.
   *
   * @generated from field: string error = 4;
   */
  error: string;

  /**
   * The metadata which will be sent to app.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.BulkStateItem.
 * Use `create(BulkStateItemSchema)` to create a new message.
 */
export declare const BulkStateItemSchema: GenMessage<BulkStateItem>;

/**
 * GetStateResponse is the response conveying the state value and etag.
 *
 * @generated from message dapr.proto.runtime.v1.GetStateResponse
 */
export declare type GetStateResponse = Message<"dapr.proto.runtime.v1.GetStateResponse"> & {
  /**
   * The byte array data
   *
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * The entity tag which represents the specific version of data.
   * ETag format is defined by the corresponding data store.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;

  /**
   * The metadata which will be sent to app.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetStateResponse.
 * Use `create(GetStateResponseSchema)` to create a new message.
 */
export declare const GetStateResponseSchema: GenMessage<GetStateResponse>;

/**
 * DeleteStateRequest is the message to delete key-value states in the specific state store.
 *
 * @generated from message dapr.proto.runtime.v1.DeleteStateRequest
 */
export declare type DeleteStateRequest = Message<"dapr.proto.runtime.v1.DeleteStateRequest"> & {
  /**
   * The name of state store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The key of the desired state
   *
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * The entity tag which represents the specific version of data.
   * The exact ETag format is defined by the corresponding data store.
   *
   * @generated from field: dapr.proto.common.v1.Etag etag = 3;
   */
  etag?: Etag;

  /**
   * State operation options which includes concurrency/
   * consistency/retry_policy.
   *
   * @generated from field: dapr.proto.common.v1.StateOptions options = 4;
   */
  options?: StateOptions;

  /**
   * The metadata which will be sent to state store components.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.DeleteStateRequest.
 * Use `create(DeleteStateRequestSchema)` to create a new message.
 */
export declare const DeleteStateRequestSchema: GenMessage<DeleteStateRequest>;

/**
 * DeleteBulkStateRequest is the message to delete a list of key-value states from specific state store.
 *
 * @generated from message dapr.proto.runtime.v1.DeleteBulkStateRequest
 */
export declare type DeleteBulkStateRequest = Message<"dapr.proto.runtime.v1.DeleteBulkStateRequest"> & {
  /**
   * The name of state store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The array of the state key values.
   *
   * @generated from field: repeated dapr.proto.common.v1.StateItem states = 2;
   */
  states: StateItem[];
};

/**
 * Describes the message dapr.proto.runtime.v1.DeleteBulkStateRequest.
 * Use `create(DeleteBulkStateRequestSchema)` to create a new message.
 */
export declare const DeleteBulkStateRequestSchema: GenMessage<DeleteBulkStateRequest>;

/**
 * SaveStateRequest is the message to save multiple states into state store.
 *
 * @generated from message dapr.proto.runtime.v1.SaveStateRequest
 */
export declare type SaveStateRequest = Message<"dapr.proto.runtime.v1.SaveStateRequest"> & {
  /**
   * The name of state store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The array of the state key values.
   *
   * @generated from field: repeated dapr.proto.common.v1.StateItem states = 2;
   */
  states: StateItem[];
};

/**
 * Describes the message dapr.proto.runtime.v1.SaveStateRequest.
 * Use `create(SaveStateRequestSchema)` to create a new message.
 */
export declare const SaveStateRequestSchema: GenMessage<SaveStateRequest>;

/**
 * QueryStateRequest is the message to query state store.
 *
 * @generated from message dapr.proto.runtime.v1.QueryStateRequest
 */
export declare type QueryStateRequest = Message<"dapr.proto.runtime.v1.QueryStateRequest"> & {
  /**
   * The name of state store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The query in JSON format.
   *
   * @generated from field: string query = 2;
   */
  query: string;

  /**
   * The metadata which will be sent to state store components.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.QueryStateRequest.
 * Use `create(QueryStateRequestSchema)` to create a new message.
 */
export declare const QueryStateRequestSchema: GenMessage<QueryStateRequest>;

/**
 * @generated from message dapr.proto.runtime.v1.QueryStateItem
 */
export declare type QueryStateItem = Message<"dapr.proto.runtime.v1.QueryStateItem"> & {
  /**
   * The object key.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The object value.
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * The entity tag which represents the specific version of data.
   * ETag format is defined by the corresponding data store.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;

  /**
   * The error message indicating an error in processing of the query result.
   *
   * @generated from field: string error = 4;
   */
  error: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.QueryStateItem.
 * Use `create(QueryStateItemSchema)` to create a new message.
 */
export declare const QueryStateItemSchema: GenMessage<QueryStateItem>;

/**
 * QueryStateResponse is the response conveying the query results.
 *
 * @generated from message dapr.proto.runtime.v1.QueryStateResponse
 */
export declare type QueryStateResponse = Message<"dapr.proto.runtime.v1.QueryStateResponse"> & {
  /**
   * An array of query results.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.QueryStateItem results = 1;
   */
  results: QueryStateItem[];

  /**
   * Pagination token.
   *
   * @generated from field: string token = 2;
   */
  token: string;

  /**
   * The metadata which will be sent to app.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.QueryStateResponse.
 * Use `create(QueryStateResponseSchema)` to create a new message.
 */
export declare const QueryStateResponseSchema: GenMessage<QueryStateResponse>;

/**
 * PublishEventRequest is the message to publish event data to pubsub topic
 *
 * @generated from message dapr.proto.runtime.v1.PublishEventRequest
 */
export declare type PublishEventRequest = Message<"dapr.proto.runtime.v1.PublishEventRequest"> & {
  /**
   * The name of the pubsub component
   *
   * @generated from field: string pubsub_name = 1;
   */
  pubsubName: string;

  /**
   * The pubsub topic
   *
   * @generated from field: string topic = 2;
   */
  topic: string;

  /**
   * The data which will be published to topic.
   *
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;

  /**
   * The content type for the data (optional).
   *
   * @generated from field: string data_content_type = 4;
   */
  dataContentType: string;

  /**
   * The metadata passing to pub components
   *
   * metadata property:
   * - key : the key of the message.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.PublishEventRequest.
 * Use `create(PublishEventRequestSchema)` to create a new message.
 */
export declare const PublishEventRequestSchema: GenMessage<PublishEventRequest>;

/**
 * BulkPublishRequest is the message to bulk publish events to pubsub topic
 *
 * @generated from message dapr.proto.runtime.v1.BulkPublishRequest
 */
export declare type BulkPublishRequest = Message<"dapr.proto.runtime.v1.BulkPublishRequest"> & {
  /**
   * The name of the pubsub component
   *
   * @generated from field: string pubsub_name = 1;
   */
  pubsubName: string;

  /**
   * The pubsub topic
   *
   * @generated from field: string topic = 2;
   */
  topic: string;

  /**
   * The entries which contain the individual events and associated details to be published
   *
   * @generated from field: repeated dapr.proto.runtime.v1.BulkPublishRequestEntry entries = 3;
   */
  entries: BulkPublishRequestEntry[];

  /**
   * The request level metadata passing to to the pubsub components
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.BulkPublishRequest.
 * Use `create(BulkPublishRequestSchema)` to create a new message.
 */
export declare const BulkPublishRequestSchema: GenMessage<BulkPublishRequest>;

/**
 * BulkPublishRequestEntry is the message containing the event to be bulk published
 *
 * @generated from message dapr.proto.runtime.v1.BulkPublishRequestEntry
 */
export declare type BulkPublishRequestEntry = Message<"dapr.proto.runtime.v1.BulkPublishRequestEntry"> & {
  /**
   * The request scoped unique ID referring to this message. Used to map status in response
   *
   * @generated from field: string entry_id = 1;
   */
  entryId: string;

  /**
   * The event which will be pulished to the topic
   *
   * @generated from field: bytes event = 2;
   */
  event: Uint8Array;

  /**
   * The content type for the event
   *
   * @generated from field: string content_type = 3;
   */
  contentType: string;

  /**
   * The event level metadata passing to the pubsub component
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.BulkPublishRequestEntry.
 * Use `create(BulkPublishRequestEntrySchema)` to create a new message.
 */
export declare const BulkPublishRequestEntrySchema: GenMessage<BulkPublishRequestEntry>;

/**
 * BulkPublishResponse is the message returned from a BulkPublishEvent call
 *
 * @generated from message dapr.proto.runtime.v1.BulkPublishResponse
 */
export declare type BulkPublishResponse = Message<"dapr.proto.runtime.v1.BulkPublishResponse"> & {
  /**
   * The entries for different events that failed publish in the BulkPublishEvent call
   *
   * @generated from field: repeated dapr.proto.runtime.v1.BulkPublishResponseFailedEntry failedEntries = 1;
   */
  failedEntries: BulkPublishResponseFailedEntry[];
};

/**
 * Describes the message dapr.proto.runtime.v1.BulkPublishResponse.
 * Use `create(BulkPublishResponseSchema)` to create a new message.
 */
export declare const BulkPublishResponseSchema: GenMessage<BulkPublishResponse>;

/**
 * BulkPublishResponseFailedEntry is the message containing the entryID and error of a failed event in BulkPublishEvent call
 *
 * @generated from message dapr.proto.runtime.v1.BulkPublishResponseFailedEntry
 */
export declare type BulkPublishResponseFailedEntry = Message<"dapr.proto.runtime.v1.BulkPublishResponseFailedEntry"> & {
  /**
   * The response scoped unique ID referring to this message
   *
   * @generated from field: string entry_id = 1;
   */
  entryId: string;

  /**
   * The error message if any on failure
   *
   * @generated from field: string error = 2;
   */
  error: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.
 * Use `create(BulkPublishResponseFailedEntrySchema)` to create a new message.
 */
export declare const BulkPublishResponseFailedEntrySchema: GenMessage<BulkPublishResponseFailedEntry>;

/**
 * SubscribeTopicEventsRequestAlpha1 is a message containing the details for
 * subscribing to a topic via streaming.
 * The first message must always be the initial request. All subsequent
 * messages must be event processed responses.
 *
 * @generated from message dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1
 */
export declare type SubscribeTopicEventsRequestAlpha1 = Message<"dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1"> & {
  /**
   * @generated from oneof dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1.subscribe_topic_events_request_type
   */
  subscribeTopicEventsRequestType: {
    /**
     * @generated from field: dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1 initial_request = 1;
     */
    value: SubscribeTopicEventsRequestInitialAlpha1;
    case: "initialRequest";
  } | {
    /**
     * @generated from field: dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1 event_processed = 2;
     */
    value: SubscribeTopicEventsRequestProcessedAlpha1;
    case: "eventProcessed";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1.
 * Use `create(SubscribeTopicEventsRequestAlpha1Schema)` to create a new message.
 */
export declare const SubscribeTopicEventsRequestAlpha1Schema: GenMessage<SubscribeTopicEventsRequestAlpha1>;

/**
 * SubscribeTopicEventsRequestInitialAlpha1 is the initial message containing
 * the details for subscribing to a topic via streaming.
 *
 * @generated from message dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1
 */
export declare type SubscribeTopicEventsRequestInitialAlpha1 = Message<"dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1"> & {
  /**
   * The name of the pubsub component
   *
   * @generated from field: string pubsub_name = 1;
   */
  pubsubName: string;

  /**
   * The pubsub topic
   *
   * @generated from field: string topic = 2;
   */
  topic: string;

  /**
   * The metadata passing to pub components
   *
   * metadata property:
   * - key : the key of the message.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };

  /**
   * dead_letter_topic is the topic to which messages that fail to be processed
   * are sent.
   *
   * @generated from field: optional string dead_letter_topic = 4;
   */
  deadLetterTopic?: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.
 * Use `create(SubscribeTopicEventsRequestInitialAlpha1Schema)` to create a new message.
 */
export declare const SubscribeTopicEventsRequestInitialAlpha1Schema: GenMessage<SubscribeTopicEventsRequestInitialAlpha1>;

/**
 * SubscribeTopicEventsRequestProcessedAlpha1 is the message containing the
 * subscription to a topic.
 *
 * @generated from message dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1
 */
export declare type SubscribeTopicEventsRequestProcessedAlpha1 = Message<"dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1"> & {
  /**
   * id is the unique identifier for the subscription request.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * status is the result of the subscription request.
   *
   * @generated from field: dapr.proto.runtime.v1.TopicEventResponse status = 2;
   */
  status?: TopicEventResponse;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1.
 * Use `create(SubscribeTopicEventsRequestProcessedAlpha1Schema)` to create a new message.
 */
export declare const SubscribeTopicEventsRequestProcessedAlpha1Schema: GenMessage<SubscribeTopicEventsRequestProcessedAlpha1>;

/**
 * SubscribeTopicEventsResponseAlpha1 is a message returned from daprd
 * when subscribing to a topic via streaming.
 *
 * @generated from message dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1
 */
export declare type SubscribeTopicEventsResponseAlpha1 = Message<"dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1"> & {
  /**
   * @generated from oneof dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1.subscribe_topic_events_response_type
   */
  subscribeTopicEventsResponseType: {
    /**
     * @generated from field: dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1 initial_response = 1;
     */
    value: SubscribeTopicEventsResponseInitialAlpha1;
    case: "initialResponse";
  } | {
    /**
     * @generated from field: dapr.proto.runtime.v1.TopicEventRequest event_message = 2;
     */
    value: TopicEventRequest;
    case: "eventMessage";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1.
 * Use `create(SubscribeTopicEventsResponseAlpha1Schema)` to create a new message.
 */
export declare const SubscribeTopicEventsResponseAlpha1Schema: GenMessage<SubscribeTopicEventsResponseAlpha1>;

/**
 * SubscribeTopicEventsResponseInitialAlpha1 is the initial response from daprd
 * when subscribing to a topic.
 *
 * @generated from message dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1
 */
export declare type SubscribeTopicEventsResponseInitialAlpha1 = Message<"dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1"> & {
};

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1.
 * Use `create(SubscribeTopicEventsResponseInitialAlpha1Schema)` to create a new message.
 */
export declare const SubscribeTopicEventsResponseInitialAlpha1Schema: GenMessage<SubscribeTopicEventsResponseInitialAlpha1>;

/**
 * InvokeBindingRequest is the message to send data to output bindings
 *
 * @generated from message dapr.proto.runtime.v1.InvokeBindingRequest
 */
export declare type InvokeBindingRequest = Message<"dapr.proto.runtime.v1.InvokeBindingRequest"> & {
  /**
   * The name of the output binding to invoke.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The data which will be sent to output binding.
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * The metadata passing to output binding components
   *
   * Common metadata property:
   * - ttlInSeconds : the time to live in seconds for the message.
   *
   * If set in the binding definition will cause all messages to
   * have a default time to live. The message ttl overrides any value
   * in the binding definition.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };

  /**
   * The name of the operation type for the binding to invoke
   *
   * @generated from field: string operation = 4;
   */
  operation: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.InvokeBindingRequest.
 * Use `create(InvokeBindingRequestSchema)` to create a new message.
 */
export declare const InvokeBindingRequestSchema: GenMessage<InvokeBindingRequest>;

/**
 * InvokeBindingResponse is the message returned from an output binding invocation
 *
 * @generated from message dapr.proto.runtime.v1.InvokeBindingResponse
 */
export declare type InvokeBindingResponse = Message<"dapr.proto.runtime.v1.InvokeBindingResponse"> & {
  /**
   * The data which will be sent to output binding.
   *
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * The metadata returned from an external system
   *
   * @generated from field: map<string, string> metadata = 2;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.InvokeBindingResponse.
 * Use `create(InvokeBindingResponseSchema)` to create a new message.
 */
export declare const InvokeBindingResponseSchema: GenMessage<InvokeBindingResponse>;

/**
 * GetSecretRequest is the message to get secret from secret store.
 *
 * @generated from message dapr.proto.runtime.v1.GetSecretRequest
 */
export declare type GetSecretRequest = Message<"dapr.proto.runtime.v1.GetSecretRequest"> & {
  /**
   * The name of secret store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The name of secret key.
   *
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * The metadata which will be sent to secret store components.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetSecretRequest.
 * Use `create(GetSecretRequestSchema)` to create a new message.
 */
export declare const GetSecretRequestSchema: GenMessage<GetSecretRequest>;

/**
 * GetSecretResponse is the response message to convey the requested secret.
 *
 * @generated from message dapr.proto.runtime.v1.GetSecretResponse
 */
export declare type GetSecretResponse = Message<"dapr.proto.runtime.v1.GetSecretResponse"> & {
  /**
   * data is the secret value. Some secret store, such as kubernetes secret
   * store, can save multiple secrets for single secret key.
   *
   * @generated from field: map<string, string> data = 1;
   */
  data: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetSecretResponse.
 * Use `create(GetSecretResponseSchema)` to create a new message.
 */
export declare const GetSecretResponseSchema: GenMessage<GetSecretResponse>;

/**
 * GetBulkSecretRequest is the message to get the secrets from secret store.
 *
 * @generated from message dapr.proto.runtime.v1.GetBulkSecretRequest
 */
export declare type GetBulkSecretRequest = Message<"dapr.proto.runtime.v1.GetBulkSecretRequest"> & {
  /**
   * The name of secret store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The metadata which will be sent to secret store components.
   *
   * @generated from field: map<string, string> metadata = 2;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetBulkSecretRequest.
 * Use `create(GetBulkSecretRequestSchema)` to create a new message.
 */
export declare const GetBulkSecretRequestSchema: GenMessage<GetBulkSecretRequest>;

/**
 * SecretResponse is a map of decrypted string/string values
 *
 * @generated from message dapr.proto.runtime.v1.SecretResponse
 */
export declare type SecretResponse = Message<"dapr.proto.runtime.v1.SecretResponse"> & {
  /**
   * @generated from field: map<string, string> secrets = 1;
   */
  secrets: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.SecretResponse.
 * Use `create(SecretResponseSchema)` to create a new message.
 */
export declare const SecretResponseSchema: GenMessage<SecretResponse>;

/**
 * GetBulkSecretResponse is the response message to convey the requested secrets.
 *
 * @generated from message dapr.proto.runtime.v1.GetBulkSecretResponse
 */
export declare type GetBulkSecretResponse = Message<"dapr.proto.runtime.v1.GetBulkSecretResponse"> & {
  /**
   * data hold the secret values. Some secret store, such as kubernetes secret
   * store, can save multiple secrets for single secret key.
   *
   * @generated from field: map<string, dapr.proto.runtime.v1.SecretResponse> data = 1;
   */
  data: { [key: string]: SecretResponse };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetBulkSecretResponse.
 * Use `create(GetBulkSecretResponseSchema)` to create a new message.
 */
export declare const GetBulkSecretResponseSchema: GenMessage<GetBulkSecretResponse>;

/**
 * TransactionalStateOperation is the message to execute a specified operation with a key-value pair.
 *
 * @generated from message dapr.proto.runtime.v1.TransactionalStateOperation
 */
export declare type TransactionalStateOperation = Message<"dapr.proto.runtime.v1.TransactionalStateOperation"> & {
  /**
   * The type of operation to be executed
   *
   * @generated from field: string operationType = 1;
   */
  operationType: string;

  /**
   * State values to be operated on
   *
   * @generated from field: dapr.proto.common.v1.StateItem request = 2;
   */
  request?: StateItem;
};

/**
 * Describes the message dapr.proto.runtime.v1.TransactionalStateOperation.
 * Use `create(TransactionalStateOperationSchema)` to create a new message.
 */
export declare const TransactionalStateOperationSchema: GenMessage<TransactionalStateOperation>;

/**
 * ExecuteStateTransactionRequest is the message to execute multiple operations on a specified store.
 *
 * @generated from message dapr.proto.runtime.v1.ExecuteStateTransactionRequest
 */
export declare type ExecuteStateTransactionRequest = Message<"dapr.proto.runtime.v1.ExecuteStateTransactionRequest"> & {
  /**
   * Required. name of state store.
   *
   * @generated from field: string storeName = 1;
   */
  storeName: string;

  /**
   * Required. transactional operation list.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
   */
  operations: TransactionalStateOperation[];

  /**
   * The metadata used for transactional operations.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.ExecuteStateTransactionRequest.
 * Use `create(ExecuteStateTransactionRequestSchema)` to create a new message.
 */
export declare const ExecuteStateTransactionRequestSchema: GenMessage<ExecuteStateTransactionRequest>;

/**
 * RegisterActorTimerRequest is the message to register a timer for an actor of a given type and id.
 *
 * @generated from message dapr.proto.runtime.v1.RegisterActorTimerRequest
 */
export declare type RegisterActorTimerRequest = Message<"dapr.proto.runtime.v1.RegisterActorTimerRequest"> & {
  /**
   * @generated from field: string actor_type = 1;
   */
  actorType: string;

  /**
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string due_time = 4;
   */
  dueTime: string;

  /**
   * @generated from field: string period = 5;
   */
  period: string;

  /**
   * @generated from field: string callback = 6;
   */
  callback: string;

  /**
   * @generated from field: bytes data = 7;
   */
  data: Uint8Array;

  /**
   * @generated from field: string ttl = 8;
   */
  ttl: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.RegisterActorTimerRequest.
 * Use `create(RegisterActorTimerRequestSchema)` to create a new message.
 */
export declare const RegisterActorTimerRequestSchema: GenMessage<RegisterActorTimerRequest>;

/**
 * UnregisterActorTimerRequest is the message to unregister an actor timer
 *
 * @generated from message dapr.proto.runtime.v1.UnregisterActorTimerRequest
 */
export declare type UnregisterActorTimerRequest = Message<"dapr.proto.runtime.v1.UnregisterActorTimerRequest"> & {
  /**
   * @generated from field: string actor_type = 1;
   */
  actorType: string;

  /**
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.UnregisterActorTimerRequest.
 * Use `create(UnregisterActorTimerRequestSchema)` to create a new message.
 */
export declare const UnregisterActorTimerRequestSchema: GenMessage<UnregisterActorTimerRequest>;

/**
 * RegisterActorReminderRequest is the message to register a reminder for an actor of a given type and id.
 *
 * @generated from message dapr.proto.runtime.v1.RegisterActorReminderRequest
 */
export declare type RegisterActorReminderRequest = Message<"dapr.proto.runtime.v1.RegisterActorReminderRequest"> & {
  /**
   * @generated from field: string actor_type = 1;
   */
  actorType: string;

  /**
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string due_time = 4;
   */
  dueTime: string;

  /**
   * @generated from field: string period = 5;
   */
  period: string;

  /**
   * @generated from field: bytes data = 6;
   */
  data: Uint8Array;

  /**
   * @generated from field: string ttl = 7;
   */
  ttl: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.RegisterActorReminderRequest.
 * Use `create(RegisterActorReminderRequestSchema)` to create a new message.
 */
export declare const RegisterActorReminderRequestSchema: GenMessage<RegisterActorReminderRequest>;

/**
 * UnregisterActorReminderRequest is the message to unregister an actor reminder.
 *
 * @generated from message dapr.proto.runtime.v1.UnregisterActorReminderRequest
 */
export declare type UnregisterActorReminderRequest = Message<"dapr.proto.runtime.v1.UnregisterActorReminderRequest"> & {
  /**
   * @generated from field: string actor_type = 1;
   */
  actorType: string;

  /**
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.UnregisterActorReminderRequest.
 * Use `create(UnregisterActorReminderRequestSchema)` to create a new message.
 */
export declare const UnregisterActorReminderRequestSchema: GenMessage<UnregisterActorReminderRequest>;

/**
 * GetActorStateRequest is the message to get key-value states from specific actor.
 *
 * @generated from message dapr.proto.runtime.v1.GetActorStateRequest
 */
export declare type GetActorStateRequest = Message<"dapr.proto.runtime.v1.GetActorStateRequest"> & {
  /**
   * @generated from field: string actor_type = 1;
   */
  actorType: string;

  /**
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * @generated from field: string key = 3;
   */
  key: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.GetActorStateRequest.
 * Use `create(GetActorStateRequestSchema)` to create a new message.
 */
export declare const GetActorStateRequestSchema: GenMessage<GetActorStateRequest>;

/**
 * GetActorStateResponse is the response conveying the actor's state value.
 *
 * @generated from message dapr.proto.runtime.v1.GetActorStateResponse
 */
export declare type GetActorStateResponse = Message<"dapr.proto.runtime.v1.GetActorStateResponse"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * The metadata which will be sent to app.
   *
   * @generated from field: map<string, string> metadata = 2;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetActorStateResponse.
 * Use `create(GetActorStateResponseSchema)` to create a new message.
 */
export declare const GetActorStateResponseSchema: GenMessage<GetActorStateResponse>;

/**
 * ExecuteActorStateTransactionRequest is the message to execute multiple operations on a specified actor.
 *
 * @generated from message dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest
 */
export declare type ExecuteActorStateTransactionRequest = Message<"dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest"> & {
  /**
   * @generated from field: string actor_type = 1;
   */
  actorType: string;

  /**
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * @generated from field: repeated dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
   */
  operations: TransactionalActorStateOperation[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.
 * Use `create(ExecuteActorStateTransactionRequestSchema)` to create a new message.
 */
export declare const ExecuteActorStateTransactionRequestSchema: GenMessage<ExecuteActorStateTransactionRequest>;

/**
 * TransactionalActorStateOperation is the message to execute a specified operation with a key-value pair.
 *
 * @generated from message dapr.proto.runtime.v1.TransactionalActorStateOperation
 */
export declare type TransactionalActorStateOperation = Message<"dapr.proto.runtime.v1.TransactionalActorStateOperation"> & {
  /**
   * @generated from field: string operationType = 1;
   */
  operationType: string;

  /**
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * @generated from field: google.protobuf.Any value = 3;
   */
  value?: Any;

  /**
   * The metadata used for transactional operations.
   *
   * Common metadata property:
   * - ttlInSeconds : the time to live in seconds for the stored value.
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.TransactionalActorStateOperation.
 * Use `create(TransactionalActorStateOperationSchema)` to create a new message.
 */
export declare const TransactionalActorStateOperationSchema: GenMessage<TransactionalActorStateOperation>;

/**
 * InvokeActorRequest is the message to call an actor.
 *
 * @generated from message dapr.proto.runtime.v1.InvokeActorRequest
 */
export declare type InvokeActorRequest = Message<"dapr.proto.runtime.v1.InvokeActorRequest"> & {
  /**
   * @generated from field: string actor_type = 1;
   */
  actorType: string;

  /**
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * @generated from field: string method = 3;
   */
  method: string;

  /**
   * @generated from field: bytes data = 4;
   */
  data: Uint8Array;

  /**
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.InvokeActorRequest.
 * Use `create(InvokeActorRequestSchema)` to create a new message.
 */
export declare const InvokeActorRequestSchema: GenMessage<InvokeActorRequest>;

/**
 * InvokeActorResponse is the method that returns an actor invocation response.
 *
 * @generated from message dapr.proto.runtime.v1.InvokeActorResponse
 */
export declare type InvokeActorResponse = Message<"dapr.proto.runtime.v1.InvokeActorResponse"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.InvokeActorResponse.
 * Use `create(InvokeActorResponseSchema)` to create a new message.
 */
export declare const InvokeActorResponseSchema: GenMessage<InvokeActorResponse>;

/**
 * GetMetadataRequest is the message for the GetMetadata request.
 *
 * Empty
 *
 * @generated from message dapr.proto.runtime.v1.GetMetadataRequest
 */
export declare type GetMetadataRequest = Message<"dapr.proto.runtime.v1.GetMetadataRequest"> & {
};

/**
 * Describes the message dapr.proto.runtime.v1.GetMetadataRequest.
 * Use `create(GetMetadataRequestSchema)` to create a new message.
 */
export declare const GetMetadataRequestSchema: GenMessage<GetMetadataRequest>;

/**
 * GetMetadataResponse is a message that is returned on GetMetadata rpc call.
 *
 * @generated from message dapr.proto.runtime.v1.GetMetadataResponse
 */
export declare type GetMetadataResponse = Message<"dapr.proto.runtime.v1.GetMetadataResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Deprecated alias for actor_runtime.active_actors.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ActiveActorsCount active_actors_count = 2 [json_name = "actors", deprecated = true];
   * @deprecated
   */
  activeActorsCount: ActiveActorsCount[];

  /**
   * @generated from field: repeated dapr.proto.runtime.v1.RegisteredComponents registered_components = 3 [json_name = "components"];
   */
  registeredComponents: RegisteredComponents[];

  /**
   * @generated from field: map<string, string> extended_metadata = 4 [json_name = "extended"];
   */
  extendedMetadata: { [key: string]: string };

  /**
   * @generated from field: repeated dapr.proto.runtime.v1.PubsubSubscription subscriptions = 5;
   */
  subscriptions: PubsubSubscription[];

  /**
   * @generated from field: repeated dapr.proto.runtime.v1.MetadataHTTPEndpoint http_endpoints = 6;
   */
  httpEndpoints: MetadataHTTPEndpoint[];

  /**
   * @generated from field: dapr.proto.runtime.v1.AppConnectionProperties app_connection_properties = 7;
   */
  appConnectionProperties?: AppConnectionProperties;

  /**
   * @generated from field: string runtime_version = 8;
   */
  runtimeVersion: string;

  /**
   * @generated from field: repeated string enabled_features = 9;
   */
  enabledFeatures: string[];

  /**
   * @generated from field: dapr.proto.runtime.v1.ActorRuntime actor_runtime = 10;
   */
  actorRuntime?: ActorRuntime;

  /**
   * @generated from field: optional dapr.proto.runtime.v1.MetadataScheduler scheduler = 11;
   */
  scheduler?: MetadataScheduler;
};

/**
 * Describes the message dapr.proto.runtime.v1.GetMetadataResponse.
 * Use `create(GetMetadataResponseSchema)` to create a new message.
 */
export declare const GetMetadataResponseSchema: GenMessage<GetMetadataResponse>;

/**
 * MetadataScheduler is a message that contains the list of addresses of the
 * scheduler connections.
 *
 * @generated from message dapr.proto.runtime.v1.MetadataScheduler
 */
export declare type MetadataScheduler = Message<"dapr.proto.runtime.v1.MetadataScheduler"> & {
  /**
   * connected_addresses the list of addresses of the scheduler connections.
   *
   * @generated from field: repeated string connected_addresses = 1;
   */
  connectedAddresses: string[];
};

/**
 * Describes the message dapr.proto.runtime.v1.MetadataScheduler.
 * Use `create(MetadataSchedulerSchema)` to create a new message.
 */
export declare const MetadataSchedulerSchema: GenMessage<MetadataScheduler>;

/**
 * @generated from message dapr.proto.runtime.v1.ActorRuntime
 */
export declare type ActorRuntime = Message<"dapr.proto.runtime.v1.ActorRuntime"> & {
  /**
   * Contains an enum indicating whether the actor runtime has been initialized.
   *
   * @generated from field: dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus runtime_status = 1;
   */
  runtimeStatus: ActorRuntime_ActorRuntimeStatus;

  /**
   * Count of active actors per type.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ActiveActorsCount active_actors = 2;
   */
  activeActors: ActiveActorsCount[];

  /**
   * Indicates whether the actor runtime is ready to host actors.
   *
   * @generated from field: bool host_ready = 3;
   */
  hostReady: boolean;

  /**
   * Custom message from the placement provider.
   *
   * @generated from field: string placement = 4;
   */
  placement: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.ActorRuntime.
 * Use `create(ActorRuntimeSchema)` to create a new message.
 */
export declare const ActorRuntimeSchema: GenMessage<ActorRuntime>;

/**
 * @generated from enum dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus
 */
export enum ActorRuntime_ActorRuntimeStatus {
  /**
   * Indicates that the actor runtime is still being initialized.
   *
   * @generated from enum value: INITIALIZING = 0;
   */
  INITIALIZING = 0,

  /**
   * Indicates that the actor runtime is disabled.
   * This normally happens when Dapr is started without "placement-host-address"
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * Indicates the actor runtime is running, either as an actor host or client.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,
}

/**
 * Describes the enum dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus.
 */
export declare const ActorRuntime_ActorRuntimeStatusSchema: GenEnum<ActorRuntime_ActorRuntimeStatus>;

/**
 * @generated from message dapr.proto.runtime.v1.ActiveActorsCount
 */
export declare type ActiveActorsCount = Message<"dapr.proto.runtime.v1.ActiveActorsCount"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: int32 count = 2;
   */
  count: number;
};

/**
 * Describes the message dapr.proto.runtime.v1.ActiveActorsCount.
 * Use `create(ActiveActorsCountSchema)` to create a new message.
 */
export declare const ActiveActorsCountSchema: GenMessage<ActiveActorsCount>;

/**
 * @generated from message dapr.proto.runtime.v1.RegisteredComponents
 */
export declare type RegisteredComponents = Message<"dapr.proto.runtime.v1.RegisteredComponents"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * @generated from field: repeated string capabilities = 4;
   */
  capabilities: string[];
};

/**
 * Describes the message dapr.proto.runtime.v1.RegisteredComponents.
 * Use `create(RegisteredComponentsSchema)` to create a new message.
 */
export declare const RegisteredComponentsSchema: GenMessage<RegisteredComponents>;

/**
 * @generated from message dapr.proto.runtime.v1.MetadataHTTPEndpoint
 */
export declare type MetadataHTTPEndpoint = Message<"dapr.proto.runtime.v1.MetadataHTTPEndpoint"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.MetadataHTTPEndpoint.
 * Use `create(MetadataHTTPEndpointSchema)` to create a new message.
 */
export declare const MetadataHTTPEndpointSchema: GenMessage<MetadataHTTPEndpoint>;

/**
 * @generated from message dapr.proto.runtime.v1.AppConnectionProperties
 */
export declare type AppConnectionProperties = Message<"dapr.proto.runtime.v1.AppConnectionProperties"> & {
  /**
   * @generated from field: int32 port = 1;
   */
  port: number;

  /**
   * @generated from field: string protocol = 2;
   */
  protocol: string;

  /**
   * @generated from field: string channel_address = 3;
   */
  channelAddress: string;

  /**
   * @generated from field: int32 max_concurrency = 4;
   */
  maxConcurrency: number;

  /**
   * @generated from field: dapr.proto.runtime.v1.AppConnectionHealthProperties health = 5;
   */
  health?: AppConnectionHealthProperties;
};

/**
 * Describes the message dapr.proto.runtime.v1.AppConnectionProperties.
 * Use `create(AppConnectionPropertiesSchema)` to create a new message.
 */
export declare const AppConnectionPropertiesSchema: GenMessage<AppConnectionProperties>;

/**
 * @generated from message dapr.proto.runtime.v1.AppConnectionHealthProperties
 */
export declare type AppConnectionHealthProperties = Message<"dapr.proto.runtime.v1.AppConnectionHealthProperties"> & {
  /**
   * @generated from field: string health_check_path = 1;
   */
  healthCheckPath: string;

  /**
   * @generated from field: string health_probe_interval = 2;
   */
  healthProbeInterval: string;

  /**
   * @generated from field: string health_probe_timeout = 3;
   */
  healthProbeTimeout: string;

  /**
   * @generated from field: int32 health_threshold = 4;
   */
  healthThreshold: number;
};

/**
 * Describes the message dapr.proto.runtime.v1.AppConnectionHealthProperties.
 * Use `create(AppConnectionHealthPropertiesSchema)` to create a new message.
 */
export declare const AppConnectionHealthPropertiesSchema: GenMessage<AppConnectionHealthProperties>;

/**
 * @generated from message dapr.proto.runtime.v1.PubsubSubscription
 */
export declare type PubsubSubscription = Message<"dapr.proto.runtime.v1.PubsubSubscription"> & {
  /**
   * @generated from field: string pubsub_name = 1 [json_name = "pubsubname"];
   */
  pubsubName: string;

  /**
   * @generated from field: string topic = 2;
   */
  topic: string;

  /**
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };

  /**
   * @generated from field: dapr.proto.runtime.v1.PubsubSubscriptionRules rules = 4;
   */
  rules?: PubsubSubscriptionRules;

  /**
   * @generated from field: string dead_letter_topic = 5;
   */
  deadLetterTopic: string;

  /**
   * @generated from field: dapr.proto.runtime.v1.PubsubSubscriptionType type = 6;
   */
  type: PubsubSubscriptionType;
};

/**
 * Describes the message dapr.proto.runtime.v1.PubsubSubscription.
 * Use `create(PubsubSubscriptionSchema)` to create a new message.
 */
export declare const PubsubSubscriptionSchema: GenMessage<PubsubSubscription>;

/**
 * @generated from message dapr.proto.runtime.v1.PubsubSubscriptionRules
 */
export declare type PubsubSubscriptionRules = Message<"dapr.proto.runtime.v1.PubsubSubscriptionRules"> & {
  /**
   * @generated from field: repeated dapr.proto.runtime.v1.PubsubSubscriptionRule rules = 1;
   */
  rules: PubsubSubscriptionRule[];
};

/**
 * Describes the message dapr.proto.runtime.v1.PubsubSubscriptionRules.
 * Use `create(PubsubSubscriptionRulesSchema)` to create a new message.
 */
export declare const PubsubSubscriptionRulesSchema: GenMessage<PubsubSubscriptionRules>;

/**
 * @generated from message dapr.proto.runtime.v1.PubsubSubscriptionRule
 */
export declare type PubsubSubscriptionRule = Message<"dapr.proto.runtime.v1.PubsubSubscriptionRule"> & {
  /**
   * @generated from field: string match = 1;
   */
  match: string;

  /**
   * @generated from field: string path = 2;
   */
  path: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.PubsubSubscriptionRule.
 * Use `create(PubsubSubscriptionRuleSchema)` to create a new message.
 */
export declare const PubsubSubscriptionRuleSchema: GenMessage<PubsubSubscriptionRule>;

/**
 * @generated from message dapr.proto.runtime.v1.SetMetadataRequest
 */
export declare type SetMetadataRequest = Message<"dapr.proto.runtime.v1.SetMetadataRequest"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.SetMetadataRequest.
 * Use `create(SetMetadataRequestSchema)` to create a new message.
 */
export declare const SetMetadataRequestSchema: GenMessage<SetMetadataRequest>;

/**
 * GetConfigurationRequest is the message to get a list of key-value configuration from specified configuration store.
 *
 * @generated from message dapr.proto.runtime.v1.GetConfigurationRequest
 */
export declare type GetConfigurationRequest = Message<"dapr.proto.runtime.v1.GetConfigurationRequest"> & {
  /**
   * Required. The name of configuration store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * Optional. The key of the configuration item to fetch.
   * If set, only query for the specified configuration items.
   * Empty list means fetch all.
   *
   * @generated from field: repeated string keys = 2;
   */
  keys: string[];

  /**
   * Optional. The metadata which will be sent to configuration store components.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetConfigurationRequest.
 * Use `create(GetConfigurationRequestSchema)` to create a new message.
 */
export declare const GetConfigurationRequestSchema: GenMessage<GetConfigurationRequest>;

/**
 * GetConfigurationResponse is the response conveying the list of configuration values.
 * It should be the FULL configuration of specified application which contains all of its configuration items.
 *
 * @generated from message dapr.proto.runtime.v1.GetConfigurationResponse
 */
export declare type GetConfigurationResponse = Message<"dapr.proto.runtime.v1.GetConfigurationResponse"> & {
  /**
   * @generated from field: map<string, dapr.proto.common.v1.ConfigurationItem> items = 1;
   */
  items: { [key: string]: ConfigurationItem };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetConfigurationResponse.
 * Use `create(GetConfigurationResponseSchema)` to create a new message.
 */
export declare const GetConfigurationResponseSchema: GenMessage<GetConfigurationResponse>;

/**
 * SubscribeConfigurationRequest is the message to get a list of key-value configuration from specified configuration store.
 *
 * @generated from message dapr.proto.runtime.v1.SubscribeConfigurationRequest
 */
export declare type SubscribeConfigurationRequest = Message<"dapr.proto.runtime.v1.SubscribeConfigurationRequest"> & {
  /**
   * The name of configuration store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * Optional. The key of the configuration item to fetch.
   * If set, only query for the specified configuration items.
   * Empty list means fetch all.
   *
   * @generated from field: repeated string keys = 2;
   */
  keys: string[];

  /**
   * The metadata which will be sent to configuration store components.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeConfigurationRequest.
 * Use `create(SubscribeConfigurationRequestSchema)` to create a new message.
 */
export declare const SubscribeConfigurationRequestSchema: GenMessage<SubscribeConfigurationRequest>;

/**
 * UnSubscribeConfigurationRequest is the message to stop watching the key-value configuration.
 *
 * @generated from message dapr.proto.runtime.v1.UnsubscribeConfigurationRequest
 */
export declare type UnsubscribeConfigurationRequest = Message<"dapr.proto.runtime.v1.UnsubscribeConfigurationRequest"> & {
  /**
   * The name of configuration store.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The id to unsubscribe.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.
 * Use `create(UnsubscribeConfigurationRequestSchema)` to create a new message.
 */
export declare const UnsubscribeConfigurationRequestSchema: GenMessage<UnsubscribeConfigurationRequest>;

/**
 * @generated from message dapr.proto.runtime.v1.SubscribeConfigurationResponse
 */
export declare type SubscribeConfigurationResponse = Message<"dapr.proto.runtime.v1.SubscribeConfigurationResponse"> & {
  /**
   * Subscribe id, used to stop subscription.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The list of items containing configuration values
   *
   * @generated from field: map<string, dapr.proto.common.v1.ConfigurationItem> items = 2;
   */
  items: { [key: string]: ConfigurationItem };
};

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeConfigurationResponse.
 * Use `create(SubscribeConfigurationResponseSchema)` to create a new message.
 */
export declare const SubscribeConfigurationResponseSchema: GenMessage<SubscribeConfigurationResponse>;

/**
 * @generated from message dapr.proto.runtime.v1.UnsubscribeConfigurationResponse
 */
export declare type UnsubscribeConfigurationResponse = Message<"dapr.proto.runtime.v1.UnsubscribeConfigurationResponse"> & {
  /**
   * @generated from field: bool ok = 1;
   */
  ok: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.
 * Use `create(UnsubscribeConfigurationResponseSchema)` to create a new message.
 */
export declare const UnsubscribeConfigurationResponseSchema: GenMessage<UnsubscribeConfigurationResponse>;

/**
 * @generated from message dapr.proto.runtime.v1.TryLockRequest
 */
export declare type TryLockRequest = Message<"dapr.proto.runtime.v1.TryLockRequest"> & {
  /**
   * Required. The lock store name,e.g. `redis`.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * Required. resource_id is the lock key. e.g. `order_id_111`
   * It stands for "which resource I want to protect"
   *
   * @generated from field: string resource_id = 2;
   */
  resourceId: string;

  /**
   * Required. lock_owner indicate the identifier of lock owner.
   * You can generate a uuid as lock_owner.For example,in golang:
   *
   * req.LockOwner = uuid.New().String()
   *
   * This field is per request,not per process,so it is different for each request,
   * which aims to prevent multi-thread in the same process trying the same lock concurrently.
   *
   * The reason why we don't make it automatically generated is:
   * 1. If it is automatically generated,there must be a 'my_lock_owner_id' field in the response.
   *   This name is so weird that we think it is inappropriate to put it into the api spec
   * 2. If we change the field 'my_lock_owner_id' in the response to 'lock_owner',which means the current lock owner of this lock,
   *   we find that in some lock services users can't get the current lock owner.Actually users don't need it at all.
   * 3. When reentrant lock is needed,the existing lock_owner is required to identify client and check "whether this client can reenter this lock".
   *   So this field in the request shouldn't be removed.
   *
   * @generated from field: string lock_owner = 3;
   */
  lockOwner: string;

  /**
   * Required. The time before expiry.The time unit is second.
   *
   * @generated from field: int32 expiry_in_seconds = 4;
   */
  expiryInSeconds: number;
};

/**
 * Describes the message dapr.proto.runtime.v1.TryLockRequest.
 * Use `create(TryLockRequestSchema)` to create a new message.
 */
export declare const TryLockRequestSchema: GenMessage<TryLockRequest>;

/**
 * @generated from message dapr.proto.runtime.v1.TryLockResponse
 */
export declare type TryLockResponse = Message<"dapr.proto.runtime.v1.TryLockResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message dapr.proto.runtime.v1.TryLockResponse.
 * Use `create(TryLockResponseSchema)` to create a new message.
 */
export declare const TryLockResponseSchema: GenMessage<TryLockResponse>;

/**
 * @generated from message dapr.proto.runtime.v1.UnlockRequest
 */
export declare type UnlockRequest = Message<"dapr.proto.runtime.v1.UnlockRequest"> & {
  /**
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * resource_id is the lock key.
   *
   * @generated from field: string resource_id = 2;
   */
  resourceId: string;

  /**
   * @generated from field: string lock_owner = 3;
   */
  lockOwner: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.UnlockRequest.
 * Use `create(UnlockRequestSchema)` to create a new message.
 */
export declare const UnlockRequestSchema: GenMessage<UnlockRequest>;

/**
 * @generated from message dapr.proto.runtime.v1.UnlockResponse
 */
export declare type UnlockResponse = Message<"dapr.proto.runtime.v1.UnlockResponse"> & {
  /**
   * @generated from field: dapr.proto.runtime.v1.UnlockResponse.Status status = 1;
   */
  status: UnlockResponse_Status;
};

/**
 * Describes the message dapr.proto.runtime.v1.UnlockResponse.
 * Use `create(UnlockResponseSchema)` to create a new message.
 */
export declare const UnlockResponseSchema: GenMessage<UnlockResponse>;

/**
 * @generated from enum dapr.proto.runtime.v1.UnlockResponse.Status
 */
export enum UnlockResponse_Status {
  /**
   * @generated from enum value: SUCCESS = 0;
   */
  SUCCESS = 0,

  /**
   * @generated from enum value: LOCK_DOES_NOT_EXIST = 1;
   */
  LOCK_DOES_NOT_EXIST = 1,

  /**
   * @generated from enum value: LOCK_BELONGS_TO_OTHERS = 2;
   */
  LOCK_BELONGS_TO_OTHERS = 2,

  /**
   * @generated from enum value: INTERNAL_ERROR = 3;
   */
  INTERNAL_ERROR = 3,
}

/**
 * Describes the enum dapr.proto.runtime.v1.UnlockResponse.Status.
 */
export declare const UnlockResponse_StatusSchema: GenEnum<UnlockResponse_Status>;

/**
 * SubtleGetKeyRequest is the request object for SubtleGetKeyAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleGetKeyRequest
 */
export declare type SubtleGetKeyRequest = Message<"dapr.proto.runtime.v1.SubtleGetKeyRequest"> & {
  /**
   * Name of the component
   *
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * Name (or name/version) of the key to use in the key vault
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Response format
   *
   * @generated from field: dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat format = 3;
   */
  format: SubtleGetKeyRequest_KeyFormat;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleGetKeyRequest.
 * Use `create(SubtleGetKeyRequestSchema)` to create a new message.
 */
export declare const SubtleGetKeyRequestSchema: GenMessage<SubtleGetKeyRequest>;

/**
 * @generated from enum dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat
 */
export enum SubtleGetKeyRequest_KeyFormat {
  /**
   * PEM (PKIX) (default)
   *
   * @generated from enum value: PEM = 0;
   */
  PEM = 0,

  /**
   * JSON (JSON Web Key) as string
   *
   * @generated from enum value: JSON = 1;
   */
  JSON = 1,
}

/**
 * Describes the enum dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat.
 */
export declare const SubtleGetKeyRequest_KeyFormatSchema: GenEnum<SubtleGetKeyRequest_KeyFormat>;

/**
 * SubtleGetKeyResponse is the response for SubtleGetKeyAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleGetKeyResponse
 */
export declare type SubtleGetKeyResponse = Message<"dapr.proto.runtime.v1.SubtleGetKeyResponse"> & {
  /**
   * Name (or name/version) of the key.
   * This is returned as response too in case there is a version.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Public key, encoded in the requested format
   *
   * @generated from field: string public_key = 2;
   */
  publicKey: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleGetKeyResponse.
 * Use `create(SubtleGetKeyResponseSchema)` to create a new message.
 */
export declare const SubtleGetKeyResponseSchema: GenMessage<SubtleGetKeyResponse>;

/**
 * SubtleEncryptRequest is the request for SubtleEncryptAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleEncryptRequest
 */
export declare type SubtleEncryptRequest = Message<"dapr.proto.runtime.v1.SubtleEncryptRequest"> & {
  /**
   * Name of the component
   *
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * Message to encrypt.
   *
   * @generated from field: bytes plaintext = 2;
   */
  plaintext: Uint8Array;

  /**
   * Algorithm to use, as in the JWA standard.
   *
   * @generated from field: string algorithm = 3;
   */
  algorithm: string;

  /**
   * Name (or name/version) of the key.
   *
   * @generated from field: string key_name = 4;
   */
  keyName: string;

  /**
   * Nonce / initialization vector.
   * Ignored with asymmetric ciphers.
   *
   * @generated from field: bytes nonce = 5;
   */
  nonce: Uint8Array;

  /**
   * Associated Data when using AEAD ciphers (optional).
   *
   * @generated from field: bytes associated_data = 6;
   */
  associatedData: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleEncryptRequest.
 * Use `create(SubtleEncryptRequestSchema)` to create a new message.
 */
export declare const SubtleEncryptRequestSchema: GenMessage<SubtleEncryptRequest>;

/**
 * SubtleEncryptResponse is the response for SubtleEncryptAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleEncryptResponse
 */
export declare type SubtleEncryptResponse = Message<"dapr.proto.runtime.v1.SubtleEncryptResponse"> & {
  /**
   * Encrypted ciphertext.
   *
   * @generated from field: bytes ciphertext = 1;
   */
  ciphertext: Uint8Array;

  /**
   * Authentication tag.
   * This is nil when not using an authenticated cipher.
   *
   * @generated from field: bytes tag = 2;
   */
  tag: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleEncryptResponse.
 * Use `create(SubtleEncryptResponseSchema)` to create a new message.
 */
export declare const SubtleEncryptResponseSchema: GenMessage<SubtleEncryptResponse>;

/**
 * SubtleDecryptRequest is the request for SubtleDecryptAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleDecryptRequest
 */
export declare type SubtleDecryptRequest = Message<"dapr.proto.runtime.v1.SubtleDecryptRequest"> & {
  /**
   * Name of the component
   *
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * Message to decrypt.
   *
   * @generated from field: bytes ciphertext = 2;
   */
  ciphertext: Uint8Array;

  /**
   * Algorithm to use, as in the JWA standard.
   *
   * @generated from field: string algorithm = 3;
   */
  algorithm: string;

  /**
   * Name (or name/version) of the key.
   *
   * @generated from field: string key_name = 4;
   */
  keyName: string;

  /**
   * Nonce / initialization vector.
   * Ignored with asymmetric ciphers.
   *
   * @generated from field: bytes nonce = 5;
   */
  nonce: Uint8Array;

  /**
   * Authentication tag.
   * This is nil when not using an authenticated cipher.
   *
   * @generated from field: bytes tag = 6;
   */
  tag: Uint8Array;

  /**
   * Associated Data when using AEAD ciphers (optional).
   *
   * @generated from field: bytes associated_data = 7;
   */
  associatedData: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleDecryptRequest.
 * Use `create(SubtleDecryptRequestSchema)` to create a new message.
 */
export declare const SubtleDecryptRequestSchema: GenMessage<SubtleDecryptRequest>;

/**
 * SubtleDecryptResponse is the response for SubtleDecryptAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleDecryptResponse
 */
export declare type SubtleDecryptResponse = Message<"dapr.proto.runtime.v1.SubtleDecryptResponse"> & {
  /**
   * Decrypted plaintext.
   *
   * @generated from field: bytes plaintext = 1;
   */
  plaintext: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleDecryptResponse.
 * Use `create(SubtleDecryptResponseSchema)` to create a new message.
 */
export declare const SubtleDecryptResponseSchema: GenMessage<SubtleDecryptResponse>;

/**
 * SubtleWrapKeyRequest is the request for SubtleWrapKeyAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleWrapKeyRequest
 */
export declare type SubtleWrapKeyRequest = Message<"dapr.proto.runtime.v1.SubtleWrapKeyRequest"> & {
  /**
   * Name of the component
   *
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * Key to wrap
   *
   * @generated from field: bytes plaintext_key = 2;
   */
  plaintextKey: Uint8Array;

  /**
   * Algorithm to use, as in the JWA standard.
   *
   * @generated from field: string algorithm = 3;
   */
  algorithm: string;

  /**
   * Name (or name/version) of the key.
   *
   * @generated from field: string key_name = 4;
   */
  keyName: string;

  /**
   * Nonce / initialization vector.
   * Ignored with asymmetric ciphers.
   *
   * @generated from field: bytes nonce = 5;
   */
  nonce: Uint8Array;

  /**
   * Associated Data when using AEAD ciphers (optional).
   *
   * @generated from field: bytes associated_data = 6;
   */
  associatedData: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleWrapKeyRequest.
 * Use `create(SubtleWrapKeyRequestSchema)` to create a new message.
 */
export declare const SubtleWrapKeyRequestSchema: GenMessage<SubtleWrapKeyRequest>;

/**
 * SubtleWrapKeyResponse is the response for SubtleWrapKeyAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleWrapKeyResponse
 */
export declare type SubtleWrapKeyResponse = Message<"dapr.proto.runtime.v1.SubtleWrapKeyResponse"> & {
  /**
   * Wrapped key.
   *
   * @generated from field: bytes wrapped_key = 1;
   */
  wrappedKey: Uint8Array;

  /**
   * Authentication tag.
   * This is nil when not using an authenticated cipher.
   *
   * @generated from field: bytes tag = 2;
   */
  tag: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleWrapKeyResponse.
 * Use `create(SubtleWrapKeyResponseSchema)` to create a new message.
 */
export declare const SubtleWrapKeyResponseSchema: GenMessage<SubtleWrapKeyResponse>;

/**
 * SubtleUnwrapKeyRequest is the request for SubtleUnwrapKeyAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleUnwrapKeyRequest
 */
export declare type SubtleUnwrapKeyRequest = Message<"dapr.proto.runtime.v1.SubtleUnwrapKeyRequest"> & {
  /**
   * Name of the component
   *
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * Wrapped key.
   *
   * @generated from field: bytes wrapped_key = 2;
   */
  wrappedKey: Uint8Array;

  /**
   * Algorithm to use, as in the JWA standard.
   *
   * @generated from field: string algorithm = 3;
   */
  algorithm: string;

  /**
   * Name (or name/version) of the key.
   *
   * @generated from field: string key_name = 4;
   */
  keyName: string;

  /**
   * Nonce / initialization vector.
   * Ignored with asymmetric ciphers.
   *
   * @generated from field: bytes nonce = 5;
   */
  nonce: Uint8Array;

  /**
   * Authentication tag.
   * This is nil when not using an authenticated cipher.
   *
   * @generated from field: bytes tag = 6;
   */
  tag: Uint8Array;

  /**
   * Associated Data when using AEAD ciphers (optional).
   *
   * @generated from field: bytes associated_data = 7;
   */
  associatedData: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.
 * Use `create(SubtleUnwrapKeyRequestSchema)` to create a new message.
 */
export declare const SubtleUnwrapKeyRequestSchema: GenMessage<SubtleUnwrapKeyRequest>;

/**
 * SubtleUnwrapKeyResponse is the response for SubtleUnwrapKeyAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleUnwrapKeyResponse
 */
export declare type SubtleUnwrapKeyResponse = Message<"dapr.proto.runtime.v1.SubtleUnwrapKeyResponse"> & {
  /**
   * Key in plaintext
   *
   * @generated from field: bytes plaintext_key = 1;
   */
  plaintextKey: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.
 * Use `create(SubtleUnwrapKeyResponseSchema)` to create a new message.
 */
export declare const SubtleUnwrapKeyResponseSchema: GenMessage<SubtleUnwrapKeyResponse>;

/**
 * SubtleSignRequest is the request for SubtleSignAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleSignRequest
 */
export declare type SubtleSignRequest = Message<"dapr.proto.runtime.v1.SubtleSignRequest"> & {
  /**
   * Name of the component
   *
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * Digest to sign.
   *
   * @generated from field: bytes digest = 2;
   */
  digest: Uint8Array;

  /**
   * Algorithm to use, as in the JWA standard.
   *
   * @generated from field: string algorithm = 3;
   */
  algorithm: string;

  /**
   * Name (or name/version) of the key.
   *
   * @generated from field: string key_name = 4;
   */
  keyName: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleSignRequest.
 * Use `create(SubtleSignRequestSchema)` to create a new message.
 */
export declare const SubtleSignRequestSchema: GenMessage<SubtleSignRequest>;

/**
 * SubtleSignResponse is the response for SubtleSignAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleSignResponse
 */
export declare type SubtleSignResponse = Message<"dapr.proto.runtime.v1.SubtleSignResponse"> & {
  /**
   * The signature that was computed
   *
   * @generated from field: bytes signature = 1;
   */
  signature: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleSignResponse.
 * Use `create(SubtleSignResponseSchema)` to create a new message.
 */
export declare const SubtleSignResponseSchema: GenMessage<SubtleSignResponse>;

/**
 * SubtleVerifyRequest is the request for SubtleVerifyAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleVerifyRequest
 */
export declare type SubtleVerifyRequest = Message<"dapr.proto.runtime.v1.SubtleVerifyRequest"> & {
  /**
   * Name of the component
   *
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * Digest of the message.
   *
   * @generated from field: bytes digest = 2;
   */
  digest: Uint8Array;

  /**
   * Algorithm to use, as in the JWA standard.
   *
   * @generated from field: string algorithm = 3;
   */
  algorithm: string;

  /**
   * Name (or name/version) of the key.
   *
   * @generated from field: string key_name = 4;
   */
  keyName: string;

  /**
   * Signature to verify.
   *
   * @generated from field: bytes signature = 5;
   */
  signature: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleVerifyRequest.
 * Use `create(SubtleVerifyRequestSchema)` to create a new message.
 */
export declare const SubtleVerifyRequestSchema: GenMessage<SubtleVerifyRequest>;

/**
 * SubtleVerifyResponse is the response for SubtleVerifyAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.SubtleVerifyResponse
 */
export declare type SubtleVerifyResponse = Message<"dapr.proto.runtime.v1.SubtleVerifyResponse"> & {
  /**
   * True if the signature is valid.
   *
   * @generated from field: bool valid = 1;
   */
  valid: boolean;
};

/**
 * Describes the message dapr.proto.runtime.v1.SubtleVerifyResponse.
 * Use `create(SubtleVerifyResponseSchema)` to create a new message.
 */
export declare const SubtleVerifyResponseSchema: GenMessage<SubtleVerifyResponse>;

/**
 * EncryptRequest is the request for EncryptAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.EncryptRequest
 */
export declare type EncryptRequest = Message<"dapr.proto.runtime.v1.EncryptRequest"> & {
  /**
   * Request details. Must be present in the first message only.
   *
   * @generated from field: dapr.proto.runtime.v1.EncryptRequestOptions options = 1;
   */
  options?: EncryptRequestOptions;

  /**
   * Chunk of data of arbitrary size.
   *
   * @generated from field: dapr.proto.common.v1.StreamPayload payload = 2;
   */
  payload?: StreamPayload;
};

/**
 * Describes the message dapr.proto.runtime.v1.EncryptRequest.
 * Use `create(EncryptRequestSchema)` to create a new message.
 */
export declare const EncryptRequestSchema: GenMessage<EncryptRequest>;

/**
 * EncryptRequestOptions contains options for the first message in the EncryptAlpha1 request.
 *
 * @generated from message dapr.proto.runtime.v1.EncryptRequestOptions
 */
export declare type EncryptRequestOptions = Message<"dapr.proto.runtime.v1.EncryptRequestOptions"> & {
  /**
   * Name of the component. Required.
   *
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * Name (or name/version) of the key. Required.
   *
   * @generated from field: string key_name = 2;
   */
  keyName: string;

  /**
   * Key wrapping algorithm to use. Required.
   * Supported options include: A256KW (alias: AES), A128CBC, A192CBC, A256CBC, RSA-OAEP-256 (alias: RSA).
   *
   * @generated from field: string key_wrap_algorithm = 3;
   */
  keyWrapAlgorithm: string;

  /**
   * Cipher used to encrypt data (optional): "aes-gcm" (default) or "chacha20-poly1305"
   *
   * @generated from field: string data_encryption_cipher = 10;
   */
  dataEncryptionCipher: string;

  /**
   * If true, the encrypted document does not contain a key reference.
   * In that case, calls to the Decrypt method must provide a key reference (name or name/version).
   * Defaults to false.
   *
   * @generated from field: bool omit_decryption_key_name = 11;
   */
  omitDecryptionKeyName: boolean;

  /**
   * Key reference to embed in the encrypted document (name or name/version).
   * This is helpful if the reference of the key used to decrypt the document is different from the one used to encrypt it.
   * If unset, uses the reference of the key used to encrypt the document (this is the default behavior).
   * This option is ignored if omit_decryption_key_name is true.
   *
   * @generated from field: string decryption_key_name = 12;
   */
  decryptionKeyName: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.EncryptRequestOptions.
 * Use `create(EncryptRequestOptionsSchema)` to create a new message.
 */
export declare const EncryptRequestOptionsSchema: GenMessage<EncryptRequestOptions>;

/**
 * EncryptResponse is the response for EncryptAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.EncryptResponse
 */
export declare type EncryptResponse = Message<"dapr.proto.runtime.v1.EncryptResponse"> & {
  /**
   * Chunk of data.
   *
   * @generated from field: dapr.proto.common.v1.StreamPayload payload = 1;
   */
  payload?: StreamPayload;
};

/**
 * Describes the message dapr.proto.runtime.v1.EncryptResponse.
 * Use `create(EncryptResponseSchema)` to create a new message.
 */
export declare const EncryptResponseSchema: GenMessage<EncryptResponse>;

/**
 * DecryptRequest is the request for DecryptAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.DecryptRequest
 */
export declare type DecryptRequest = Message<"dapr.proto.runtime.v1.DecryptRequest"> & {
  /**
   * Request details. Must be present in the first message only.
   *
   * @generated from field: dapr.proto.runtime.v1.DecryptRequestOptions options = 1;
   */
  options?: DecryptRequestOptions;

  /**
   * Chunk of data of arbitrary size.
   *
   * @generated from field: dapr.proto.common.v1.StreamPayload payload = 2;
   */
  payload?: StreamPayload;
};

/**
 * Describes the message dapr.proto.runtime.v1.DecryptRequest.
 * Use `create(DecryptRequestSchema)` to create a new message.
 */
export declare const DecryptRequestSchema: GenMessage<DecryptRequest>;

/**
 * DecryptRequestOptions contains options for the first message in the DecryptAlpha1 request.
 *
 * @generated from message dapr.proto.runtime.v1.DecryptRequestOptions
 */
export declare type DecryptRequestOptions = Message<"dapr.proto.runtime.v1.DecryptRequestOptions"> & {
  /**
   * Name of the component
   *
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * Name (or name/version) of the key to decrypt the message.
   * Overrides any key reference included in the message if present.
   * This is required if the message doesn't include a key reference (i.e. was created with omit_decryption_key_name set to true).
   *
   * @generated from field: string key_name = 12;
   */
  keyName: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.DecryptRequestOptions.
 * Use `create(DecryptRequestOptionsSchema)` to create a new message.
 */
export declare const DecryptRequestOptionsSchema: GenMessage<DecryptRequestOptions>;

/**
 * DecryptResponse is the response for DecryptAlpha1.
 *
 * @generated from message dapr.proto.runtime.v1.DecryptResponse
 */
export declare type DecryptResponse = Message<"dapr.proto.runtime.v1.DecryptResponse"> & {
  /**
   * Chunk of data.
   *
   * @generated from field: dapr.proto.common.v1.StreamPayload payload = 1;
   */
  payload?: StreamPayload;
};

/**
 * Describes the message dapr.proto.runtime.v1.DecryptResponse.
 * Use `create(DecryptResponseSchema)` to create a new message.
 */
export declare const DecryptResponseSchema: GenMessage<DecryptResponse>;

/**
 * GetWorkflowRequest is the request for GetWorkflowBeta1.
 *
 * @generated from message dapr.proto.runtime.v1.GetWorkflowRequest
 */
export declare type GetWorkflowRequest = Message<"dapr.proto.runtime.v1.GetWorkflowRequest"> & {
  /**
   * ID of the workflow instance to query.
   *
   * @generated from field: string instance_id = 1 [json_name = "instanceID"];
   */
  instanceId: string;

  /**
   * Name of the workflow component.
   *
   * @generated from field: string workflow_component = 2;
   */
  workflowComponent: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.GetWorkflowRequest.
 * Use `create(GetWorkflowRequestSchema)` to create a new message.
 */
export declare const GetWorkflowRequestSchema: GenMessage<GetWorkflowRequest>;

/**
 * GetWorkflowResponse is the response for GetWorkflowBeta1.
 *
 * @generated from message dapr.proto.runtime.v1.GetWorkflowResponse
 */
export declare type GetWorkflowResponse = Message<"dapr.proto.runtime.v1.GetWorkflowResponse"> & {
  /**
   * ID of the workflow instance.
   *
   * @generated from field: string instance_id = 1 [json_name = "instanceID"];
   */
  instanceId: string;

  /**
   * Name of the workflow.
   *
   * @generated from field: string workflow_name = 2;
   */
  workflowName: string;

  /**
   * The time at which the workflow instance was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * The last time at which the workflow instance had its state changed.
   *
   * @generated from field: google.protobuf.Timestamp last_updated_at = 4;
   */
  lastUpdatedAt?: Timestamp;

  /**
   * The current status of the workflow instance, for example, "PENDING", "RUNNING", "SUSPENDED", "COMPLETED", "FAILED", and "TERMINATED".
   *
   * @generated from field: string runtime_status = 5;
   */
  runtimeStatus: string;

  /**
   * Additional component-specific properties of the workflow instance.
   *
   * @generated from field: map<string, string> properties = 6;
   */
  properties: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.GetWorkflowResponse.
 * Use `create(GetWorkflowResponseSchema)` to create a new message.
 */
export declare const GetWorkflowResponseSchema: GenMessage<GetWorkflowResponse>;

/**
 * StartWorkflowRequest is the request for StartWorkflowBeta1.
 *
 * @generated from message dapr.proto.runtime.v1.StartWorkflowRequest
 */
export declare type StartWorkflowRequest = Message<"dapr.proto.runtime.v1.StartWorkflowRequest"> & {
  /**
   * The ID to assign to the started workflow instance. If empty, a random ID is generated.
   *
   * @generated from field: string instance_id = 1 [json_name = "instanceID"];
   */
  instanceId: string;

  /**
   * Name of the workflow component.
   *
   * @generated from field: string workflow_component = 2;
   */
  workflowComponent: string;

  /**
   * Name of the workflow.
   *
   * @generated from field: string workflow_name = 3;
   */
  workflowName: string;

  /**
   * Additional component-specific options for starting the workflow instance.
   *
   * @generated from field: map<string, string> options = 4;
   */
  options: { [key: string]: string };

  /**
   * Input data for the workflow instance.
   *
   * @generated from field: bytes input = 5;
   */
  input: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.StartWorkflowRequest.
 * Use `create(StartWorkflowRequestSchema)` to create a new message.
 */
export declare const StartWorkflowRequestSchema: GenMessage<StartWorkflowRequest>;

/**
 * StartWorkflowResponse is the response for StartWorkflowBeta1.
 *
 * @generated from message dapr.proto.runtime.v1.StartWorkflowResponse
 */
export declare type StartWorkflowResponse = Message<"dapr.proto.runtime.v1.StartWorkflowResponse"> & {
  /**
   * ID of the started workflow instance.
   *
   * @generated from field: string instance_id = 1 [json_name = "instanceID"];
   */
  instanceId: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.StartWorkflowResponse.
 * Use `create(StartWorkflowResponseSchema)` to create a new message.
 */
export declare const StartWorkflowResponseSchema: GenMessage<StartWorkflowResponse>;

/**
 * TerminateWorkflowRequest is the request for TerminateWorkflowBeta1.
 *
 * @generated from message dapr.proto.runtime.v1.TerminateWorkflowRequest
 */
export declare type TerminateWorkflowRequest = Message<"dapr.proto.runtime.v1.TerminateWorkflowRequest"> & {
  /**
   * ID of the workflow instance to terminate.
   *
   * @generated from field: string instance_id = 1 [json_name = "instanceID"];
   */
  instanceId: string;

  /**
   * Name of the workflow component.
   *
   * @generated from field: string workflow_component = 2;
   */
  workflowComponent: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.TerminateWorkflowRequest.
 * Use `create(TerminateWorkflowRequestSchema)` to create a new message.
 */
export declare const TerminateWorkflowRequestSchema: GenMessage<TerminateWorkflowRequest>;

/**
 * PauseWorkflowRequest is the request for PauseWorkflowBeta1.
 *
 * @generated from message dapr.proto.runtime.v1.PauseWorkflowRequest
 */
export declare type PauseWorkflowRequest = Message<"dapr.proto.runtime.v1.PauseWorkflowRequest"> & {
  /**
   * ID of the workflow instance to pause.
   *
   * @generated from field: string instance_id = 1 [json_name = "instanceID"];
   */
  instanceId: string;

  /**
   * Name of the workflow component.
   *
   * @generated from field: string workflow_component = 2;
   */
  workflowComponent: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.PauseWorkflowRequest.
 * Use `create(PauseWorkflowRequestSchema)` to create a new message.
 */
export declare const PauseWorkflowRequestSchema: GenMessage<PauseWorkflowRequest>;

/**
 * ResumeWorkflowRequest is the request for ResumeWorkflowBeta1.
 *
 * @generated from message dapr.proto.runtime.v1.ResumeWorkflowRequest
 */
export declare type ResumeWorkflowRequest = Message<"dapr.proto.runtime.v1.ResumeWorkflowRequest"> & {
  /**
   * ID of the workflow instance to resume.
   *
   * @generated from field: string instance_id = 1 [json_name = "instanceID"];
   */
  instanceId: string;

  /**
   * Name of the workflow component.
   *
   * @generated from field: string workflow_component = 2;
   */
  workflowComponent: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.ResumeWorkflowRequest.
 * Use `create(ResumeWorkflowRequestSchema)` to create a new message.
 */
export declare const ResumeWorkflowRequestSchema: GenMessage<ResumeWorkflowRequest>;

/**
 * RaiseEventWorkflowRequest is the request for RaiseEventWorkflowBeta1.
 *
 * @generated from message dapr.proto.runtime.v1.RaiseEventWorkflowRequest
 */
export declare type RaiseEventWorkflowRequest = Message<"dapr.proto.runtime.v1.RaiseEventWorkflowRequest"> & {
  /**
   * ID of the workflow instance to raise an event for.
   *
   * @generated from field: string instance_id = 1 [json_name = "instanceID"];
   */
  instanceId: string;

  /**
   * Name of the workflow component.
   *
   * @generated from field: string workflow_component = 2;
   */
  workflowComponent: string;

  /**
   * Name of the event.
   *
   * @generated from field: string event_name = 3;
   */
  eventName: string;

  /**
   * Data associated with the event.
   *
   * @generated from field: bytes event_data = 4;
   */
  eventData: Uint8Array;
};

/**
 * Describes the message dapr.proto.runtime.v1.RaiseEventWorkflowRequest.
 * Use `create(RaiseEventWorkflowRequestSchema)` to create a new message.
 */
export declare const RaiseEventWorkflowRequestSchema: GenMessage<RaiseEventWorkflowRequest>;

/**
 * PurgeWorkflowRequest is the request for PurgeWorkflowBeta1.
 *
 * @generated from message dapr.proto.runtime.v1.PurgeWorkflowRequest
 */
export declare type PurgeWorkflowRequest = Message<"dapr.proto.runtime.v1.PurgeWorkflowRequest"> & {
  /**
   * ID of the workflow instance to purge.
   *
   * @generated from field: string instance_id = 1 [json_name = "instanceID"];
   */
  instanceId: string;

  /**
   * Name of the workflow component.
   *
   * @generated from field: string workflow_component = 2;
   */
  workflowComponent: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.PurgeWorkflowRequest.
 * Use `create(PurgeWorkflowRequestSchema)` to create a new message.
 */
export declare const PurgeWorkflowRequestSchema: GenMessage<PurgeWorkflowRequest>;

/**
 * ShutdownRequest is the request for Shutdown.
 *
 * Empty
 *
 * @generated from message dapr.proto.runtime.v1.ShutdownRequest
 */
export declare type ShutdownRequest = Message<"dapr.proto.runtime.v1.ShutdownRequest"> & {
};

/**
 * Describes the message dapr.proto.runtime.v1.ShutdownRequest.
 * Use `create(ShutdownRequestSchema)` to create a new message.
 */
export declare const ShutdownRequestSchema: GenMessage<ShutdownRequest>;

/**
 * Job is the definition of a job. At least one of schedule or due_time must be
 * provided but can also be provided together.
 *
 * @generated from message dapr.proto.runtime.v1.Job
 */
export declare type Job = Message<"dapr.proto.runtime.v1.Job"> & {
  /**
   * The unique name for the job.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * schedule is an optional schedule at which the job is to be run.
   * Accepts both systemd timer style cron expressions, as well as human
   * readable '@' prefixed period strings as defined below.
   *
   * Systemd timer style cron accepts 6 fields:
   * seconds | minutes | hours | day of month | month        | day of week
   * 0-59    | 0-59    | 0-23  | 1-31         | 1-12/jan-dec | 0-6/sun-sat
   *
   * "0 30 * * * *" - every hour on the half hour
   * "0 15 3 * * *" - every day at 03:15
   *
   * Period string expressions:
   * Entry                  | Description                                  | Equivalent To
   * -----                  | -----------                                  | -------------
   * @every `<duration>`    | Run every `<duration>` (e.g. '@every 1h30m') | N/A
   * @yearly (or @annually) | Run once a year, midnight, Jan. 1st          | 0 0 0 1 1 *
   * @monthly               | Run once a month, midnight, first of month   | 0 0 0 1 * *
   * @weekly                | Run once a week, midnight on Sunday          | 0 0 0 * * 0
   * @daily (or @midnight)  | Run once a day, midnight                     | 0 0 0 * * *
   * @hourly                | Run once an hour, beginning of hour          | 0 0 * * * *
   *
   * @generated from field: optional string schedule = 2;
   */
  schedule?: string;

  /**
   * repeats is the optional number of times in which the job should be
   * triggered. If not set, the job will run indefinitely or until expiration.
   *
   * @generated from field: optional uint32 repeats = 3;
   */
  repeats?: number;

  /**
   * due_time is the optional time at which the job should be active, or the
   * "one shot" time if other scheduling type fields are not provided. Accepts
   * a "point in time" string in the format of RFC3339, Go duration string
   * (calculated from job creation time), or non-repeating ISO8601.
   *
   * @generated from field: optional string due_time = 4;
   */
  dueTime?: string;

  /**
   * ttl is the optional time to live or expiration of the job. Accepts a
   * "point in time" string in the format of RFC3339, Go duration string
   * (calculated from job creation time), or non-repeating ISO8601.
   *
   * @generated from field: optional string ttl = 5;
   */
  ttl?: string;

  /**
   * payload is the serialized job payload that will be sent to the recipient
   * when the job is triggered.
   *
   * @generated from field: google.protobuf.Any data = 6;
   */
  data?: Any;

  /**
   * failure_policy is the optional policy for handling job failures.
   *
   * @generated from field: optional dapr.proto.common.v1.JobFailurePolicy failure_policy = 7;
   */
  failurePolicy?: JobFailurePolicy;
};

/**
 * Describes the message dapr.proto.runtime.v1.Job.
 * Use `create(JobSchema)` to create a new message.
 */
export declare const JobSchema: GenMessage<Job>;

/**
 * ScheduleJobRequest is the message to create/schedule the job.
 *
 * @generated from message dapr.proto.runtime.v1.ScheduleJobRequest
 */
export declare type ScheduleJobRequest = Message<"dapr.proto.runtime.v1.ScheduleJobRequest"> & {
  /**
   * The job details.
   *
   * @generated from field: dapr.proto.runtime.v1.Job job = 1;
   */
  job?: Job;

  /**
   * If true, allows this job to overwrite an existing job with the same name.
   *
   * @generated from field: bool overwrite = 2;
   */
  overwrite: boolean;
};

/**
 * Describes the message dapr.proto.runtime.v1.ScheduleJobRequest.
 * Use `create(ScheduleJobRequestSchema)` to create a new message.
 */
export declare const ScheduleJobRequestSchema: GenMessage<ScheduleJobRequest>;

/**
 * ScheduleJobResponse is the message response to create/schedule the job.
 *
 * Empty
 *
 * @generated from message dapr.proto.runtime.v1.ScheduleJobResponse
 */
export declare type ScheduleJobResponse = Message<"dapr.proto.runtime.v1.ScheduleJobResponse"> & {
};

/**
 * Describes the message dapr.proto.runtime.v1.ScheduleJobResponse.
 * Use `create(ScheduleJobResponseSchema)` to create a new message.
 */
export declare const ScheduleJobResponseSchema: GenMessage<ScheduleJobResponse>;

/**
 * GetJobRequest is the message to retrieve a job.
 *
 * @generated from message dapr.proto.runtime.v1.GetJobRequest
 */
export declare type GetJobRequest = Message<"dapr.proto.runtime.v1.GetJobRequest"> & {
  /**
   * The name of the job.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.GetJobRequest.
 * Use `create(GetJobRequestSchema)` to create a new message.
 */
export declare const GetJobRequestSchema: GenMessage<GetJobRequest>;

/**
 * GetJobResponse is the message's response for a job retrieved.
 *
 * @generated from message dapr.proto.runtime.v1.GetJobResponse
 */
export declare type GetJobResponse = Message<"dapr.proto.runtime.v1.GetJobResponse"> & {
  /**
   * The job details.
   *
   * @generated from field: dapr.proto.runtime.v1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message dapr.proto.runtime.v1.GetJobResponse.
 * Use `create(GetJobResponseSchema)` to create a new message.
 */
export declare const GetJobResponseSchema: GenMessage<GetJobResponse>;

/**
 * DeleteJobRequest is the message to delete the job by name.
 *
 * @generated from message dapr.proto.runtime.v1.DeleteJobRequest
 */
export declare type DeleteJobRequest = Message<"dapr.proto.runtime.v1.DeleteJobRequest"> & {
  /**
   * The name of the job.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.DeleteJobRequest.
 * Use `create(DeleteJobRequestSchema)` to create a new message.
 */
export declare const DeleteJobRequestSchema: GenMessage<DeleteJobRequest>;

/**
 * DeleteJobResponse is the message response to delete the job by name.
 *
 * Empty
 *
 * @generated from message dapr.proto.runtime.v1.DeleteJobResponse
 */
export declare type DeleteJobResponse = Message<"dapr.proto.runtime.v1.DeleteJobResponse"> & {
};

/**
 * Describes the message dapr.proto.runtime.v1.DeleteJobResponse.
 * Use `create(DeleteJobResponseSchema)` to create a new message.
 */
export declare const DeleteJobResponseSchema: GenMessage<DeleteJobResponse>;

/**
 * ConversationRequest is the request object for Conversation.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationRequest
 * @deprecated
 */
export declare type ConversationRequest = Message<"dapr.proto.runtime.v1.ConversationRequest"> & {
  /**
   * The name of Conversation component
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The ID of an existing chat (like in ChatGPT)
   *
   * @generated from field: optional string contextID = 2;
   */
  contextID?: string;

  /**
   * Inputs for the conversation, support multiple input in one time.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationInput inputs = 3;
   */
  inputs: ConversationInput[];

  /**
   * Parameters for all custom fields.
   *
   * @generated from field: map<string, google.protobuf.Any> parameters = 4;
   */
  parameters: { [key: string]: Any };

  /**
   * The metadata passing to conversation components.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };

  /**
   * Scrub PII data that comes back from the LLM
   *
   * @generated from field: optional bool scrubPII = 6;
   */
  scrubPII?: boolean;

  /**
   * Temperature for the LLM to optimize for creativity or predictability
   *
   * @generated from field: optional double temperature = 7;
   */
  temperature?: number;
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationRequest.
 * Use `create(ConversationRequestSchema)` to create a new message.
 * @deprecated
 */
export declare const ConversationRequestSchema: GenMessage<ConversationRequest>;

/**
 * ConversationRequestAlpha2 is the new request object for Conversation.
 * Many of these fields are inspired by openai.ChatCompletionNewParams
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L2106
 *
 * @generated from message dapr.proto.runtime.v1.ConversationRequestAlpha2
 */
export declare type ConversationRequestAlpha2 = Message<"dapr.proto.runtime.v1.ConversationRequestAlpha2"> & {
  /**
   * The name of Conversation component
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The ID of an existing chat (like in ChatGPT)
   *
   * @generated from field: optional string context_id = 2;
   */
  contextId?: string;

  /**
   * Inputs for the conversation, support multiple input in one time.
   * This is the revamped conversation inputs better matching openai.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationInputAlpha2 inputs = 3;
   */
  inputs: ConversationInputAlpha2[];

  /**
   * Parameters for all custom fields.
   *
   * @generated from field: map<string, google.protobuf.Any> parameters = 4;
   */
  parameters: { [key: string]: Any };

  /**
   * The metadata passing to conversation components.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };

  /**
   * Scrub PII data that comes back from the LLM
   *
   * @generated from field: optional bool scrub_pii = 6;
   */
  scrubPii?: boolean;

  /**
   * Temperature for the LLM to optimize for creativity or predictability
   *
   * @generated from field: optional double temperature = 7;
   */
  temperature?: number;

  /**
   * Tools register the tools available to be used by the LLM during the conversation.
   * These are sent on a per request basis.
   * The tools available during the first round of the conversation
   * may be different than tools specified later on.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationTools tools = 8;
   */
  tools: ConversationTools[];

  /**
   * Controls which (if any) tool is called by the model. 
   * `none` means the model will not call any tool and instead generates a message. 
   * `auto` means the model can pick between generating a message or calling one or more tools.
   * Alternatively, a specific tool name may be used here, and casing/syntax must match on tool name.
   * `none` is the default when no tools are present.
   * `auto` is the default if tools are present.
   * `required` requires one or more functions to be called.
   * ref: https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1976
   * ref: https://python.langchain.com/docs/how_to/tool_choice/
   *
   * @generated from field: optional string tool_choice = 9;
   */
  toolChoice?: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationRequestAlpha2.
 * Use `create(ConversationRequestAlpha2Schema)` to create a new message.
 */
export declare const ConversationRequestAlpha2Schema: GenMessage<ConversationRequestAlpha2>;

/**
 * maintained for backwards compatibility
 *
 * @generated from message dapr.proto.runtime.v1.ConversationInput
 * @deprecated
 */
export declare type ConversationInput = Message<"dapr.proto.runtime.v1.ConversationInput"> & {
  /**
   * The content to send to the llm
   *
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * The role to set for the message
   *
   * @generated from field: optional string role = 2;
   */
  role?: string;

  /**
   * Scrub PII data that goes into the LLM
   *
   * @generated from field: optional bool scrubPII = 3;
   */
  scrubPII?: boolean;
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationInput.
 * Use `create(ConversationInputSchema)` to create a new message.
 * @deprecated
 */
export declare const ConversationInputSchema: GenMessage<ConversationInput>;

/**
 * directly inspired by openai.ChatCompletionNewParams
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L2106
 *
 * @generated from message dapr.proto.runtime.v1.ConversationInputAlpha2
 */
export declare type ConversationInputAlpha2 = Message<"dapr.proto.runtime.v1.ConversationInputAlpha2"> & {
  /**
   * The content to send to the llm
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationMessage messages = 1;
   */
  messages: ConversationMessage[];

  /**
   * Scrub PII data that goes into the LLM
   *
   * @generated from field: optional bool scrub_pii = 2;
   */
  scrubPii?: boolean;
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationInputAlpha2.
 * Use `create(ConversationInputAlpha2Schema)` to create a new message.
 */
export declare const ConversationInputAlpha2Schema: GenMessage<ConversationInputAlpha2>;

/**
 * inspired by openai.ChatCompletionMessageParamUnion
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1449
 * The role field is inherent to the type of ConversationMessage,
 * and is propagated in the backend according to the underlying LLM provider type.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationMessage
 */
export declare type ConversationMessage = Message<"dapr.proto.runtime.v1.ConversationMessage"> & {
  /**
   * @generated from oneof dapr.proto.runtime.v1.ConversationMessage.message_types
   */
  messageTypes: {
    /**
     * @generated from field: dapr.proto.runtime.v1.ConversationMessageOfDeveloper of_developer = 1;
     */
    value: ConversationMessageOfDeveloper;
    case: "ofDeveloper";
  } | {
    /**
     * @generated from field: dapr.proto.runtime.v1.ConversationMessageOfSystem of_system = 2;
     */
    value: ConversationMessageOfSystem;
    case: "ofSystem";
  } | {
    /**
     * @generated from field: dapr.proto.runtime.v1.ConversationMessageOfUser of_user = 3;
     */
    value: ConversationMessageOfUser;
    case: "ofUser";
  } | {
    /**
     * @generated from field: dapr.proto.runtime.v1.ConversationMessageOfAssistant of_assistant = 4;
     */
    value: ConversationMessageOfAssistant;
    case: "ofAssistant";
  } | {
    /**
     * Note: there could be a ConversationMessageOfFunction type here too, 
     * but that is deprecated in openai, so we will not support this.
     *
     * @generated from field: dapr.proto.runtime.v1.ConversationMessageOfTool of_tool = 5;
     */
    value: ConversationMessageOfTool;
    case: "ofTool";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessage.
 * Use `create(ConversationMessageSchema)` to create a new message.
 */
export declare const ConversationMessageSchema: GenMessage<ConversationMessage>;

/**
 * inspired by openai.ChatCompletionDeveloperMessageParam
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1130
 * ConversationMessageOfDeveloper is intended to be the contents of a conversation message,
 * as the role of a developer.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationMessageOfDeveloper
 */
export declare type ConversationMessageOfDeveloper = Message<"dapr.proto.runtime.v1.ConversationMessageOfDeveloper"> & {
  /**
   * The name of the participant in the message.
   *
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationMessageContent content = 2;
   */
  content: ConversationMessageContent[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfDeveloper.
 * Use `create(ConversationMessageOfDeveloperSchema)` to create a new message.
 */
export declare const ConversationMessageOfDeveloperSchema: GenMessage<ConversationMessageOfDeveloper>;

/**
 * inspired by openai.ChatCompletionSystemMessageParam
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1842
 * ConversationMessageOfSystem is intended to be the contents of a conversation message,
 * as the role of a system.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationMessageOfSystem
 */
export declare type ConversationMessageOfSystem = Message<"dapr.proto.runtime.v1.ConversationMessageOfSystem"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationMessageContent content = 2;
   */
  content: ConversationMessageContent[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfSystem.
 * Use `create(ConversationMessageOfSystemSchema)` to create a new message.
 */
export declare const ConversationMessageOfSystemSchema: GenMessage<ConversationMessageOfSystem>;

/**
 * inspired by openai.ChatCompletionUserMessageParam
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L2060C6-L2060C36
 * ConversationMessageOfUser is intended to be the contents of a conversation message,
 * as the role of an end user.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationMessageOfUser
 */
export declare type ConversationMessageOfUser = Message<"dapr.proto.runtime.v1.ConversationMessageOfUser"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationMessageContent content = 2;
   */
  content: ConversationMessageContent[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfUser.
 * Use `create(ConversationMessageOfUserSchema)` to create a new message.
 */
export declare const ConversationMessageOfUserSchema: GenMessage<ConversationMessageOfUser>;

/**
 * inspired by openai.ChatCompletionAssistantMessageParam
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L310
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L2060C6-L2060C36
 * ConversationMessageOfAssistant is intended to be the contents of a conversation message,
 * as the role of an assistant.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationMessageOfAssistant
 */
export declare type ConversationMessageOfAssistant = Message<"dapr.proto.runtime.v1.ConversationMessageOfAssistant"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationMessageContent content = 2;
   */
  content: ConversationMessageContent[];

  /**
   * Tool calls generated by the model, such as function calls for the client to then make.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationToolCalls tool_calls = 3;
   */
  toolCalls: ConversationToolCalls[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfAssistant.
 * Use `create(ConversationMessageOfAssistantSchema)` to create a new message.
 */
export declare const ConversationMessageOfAssistantSchema: GenMessage<ConversationMessageOfAssistant>;

/**
 * inspired by openai.ChatCompletionToolMessageParam
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L2011
 * ConversationMessageOfTool is intended to be the contents of a conversation message,
 * as the role of a tool.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationMessageOfTool
 */
export declare type ConversationMessageOfTool = Message<"dapr.proto.runtime.v1.ConversationMessageOfTool"> & {
  /**
   * Tool ID is helpful for tracking tool history
   *
   * @generated from field: optional string tool_id = 1;
   */
  toolId?: string;

  /**
   * Name of tool associated with the message
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationMessageContent content = 3;
   */
  content: ConversationMessageContent[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfTool.
 * Use `create(ConversationMessageOfToolSchema)` to create a new message.
 */
export declare const ConversationMessageOfToolSchema: GenMessage<ConversationMessageOfTool>;

/**
 * inspired by openai.ChatCompletionMessageToolCallParam and openai.ChatCompletionMessageToolCall
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1669
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1611
 * ConversationToolCalls is the tool call request sent from the llm to the client to then call to execute.
 * This assumes that in our api if a client makes a request that would get a tool call response from the llm,
 * that this client can also have the tool handy itself to execute it.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationToolCalls
 */
export declare type ConversationToolCalls = Message<"dapr.proto.runtime.v1.ConversationToolCalls"> & {
  /**
   * @generated from field: optional string id = 1;
   */
  id?: string;

  /**
   * @generated from oneof dapr.proto.runtime.v1.ConversationToolCalls.tool_types
   */
  toolTypes: {
    /**
     * @generated from field: dapr.proto.runtime.v1.ConversationToolCallsOfFunction function = 2;
     */
    value: ConversationToolCallsOfFunction;
    case: "function";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationToolCalls.
 * Use `create(ConversationToolCallsSchema)` to create a new message.
 */
export declare const ConversationToolCallsSchema: GenMessage<ConversationToolCalls>;

/**
 * inspired by openai.ChatCompletionMessageToolCallFunctionParam
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1692
 *
 * @generated from message dapr.proto.runtime.v1.ConversationToolCallsOfFunction
 */
export declare type ConversationToolCallsOfFunction = Message<"dapr.proto.runtime.v1.ConversationToolCallsOfFunction"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The arguments to call the function with, as generated by the model in JSON
   * format. Note that the model does not always generate valid JSON, and may
   * hallucinate parameters not defined by your function schema. Validate the
   * arguments in your code before calling your function.
   *
   * @generated from field: string arguments = 2;
   */
  arguments: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationToolCallsOfFunction.
 * Use `create(ConversationToolCallsOfFunctionSchema)` to create a new message.
 */
export declare const ConversationToolCallsOfFunctionSchema: GenMessage<ConversationToolCallsOfFunction>;

/**
 * inspired by openai.ChatCompletionContentPartTextParam & openai.ChatCompletionDeveloperMessageParamContentUnion
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1084
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1154C6-L1154C53
 * Note: openai has this message be either a message of string or message of array type,
 * so instead of this, we support that in one message type instead.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationMessageContent
 */
export declare type ConversationMessageContent = Message<"dapr.proto.runtime.v1.ConversationMessageContent"> & {
  /**
   * @generated from field: string text = 1;
   */
  text: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageContent.
 * Use `create(ConversationMessageContentSchema)` to create a new message.
 */
export declare const ConversationMessageContentSchema: GenMessage<ConversationMessageContent>;

/**
 * ConversationResult is the result for one input.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationResult
 * @deprecated
 */
export declare type ConversationResult = Message<"dapr.proto.runtime.v1.ConversationResult"> & {
  /**
   * Result for the one conversation input.
   *
   * @generated from field: string result = 1;
   */
  result: string;

  /**
   * Parameters for all custom fields.
   *
   * @generated from field: map<string, google.protobuf.Any> parameters = 2;
   */
  parameters: { [key: string]: Any };
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResult.
 * Use `create(ConversationResultSchema)` to create a new message.
 * @deprecated
 */
export declare const ConversationResultSchema: GenMessage<ConversationResult>;

/**
 * inspired by openai.ChatCompletion
 * ConversationResultAlpha2 is the result for one input.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationResultAlpha2
 */
export declare type ConversationResultAlpha2 = Message<"dapr.proto.runtime.v1.ConversationResultAlpha2"> & {
  /**
   * Result for the conversation input.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationResultChoices choices = 1;
   */
  choices: ConversationResultChoices[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResultAlpha2.
 * Use `create(ConversationResultAlpha2Schema)` to create a new message.
 */
export declare const ConversationResultAlpha2Schema: GenMessage<ConversationResultAlpha2>;

/**
 * inspired by openai.ChatCompletionChoice
 * based on https://github.com/openai/openai-go/blob/main/chatcompletion.go#L226
 *
 * @generated from message dapr.proto.runtime.v1.ConversationResultChoices
 */
export declare type ConversationResultChoices = Message<"dapr.proto.runtime.v1.ConversationResultChoices"> & {
  /**
   * The reason the model stopped generating tokens. This will be `stop` if the model
   * hit a natural stop point or a provided stop sequence, `length` if the maximum
   * number of tokens specified in the request was reached, `content_filter` if
   * content was omitted due to a flag from our content filters, `tool_calls` if the
   * model called a tool.
   * Any of "stop", "length", "tool_calls", "content_filter".
   *
   * @generated from field: string finish_reason = 1;
   */
  finishReason: string;

  /**
   * The index of the choice in the list of choices.
   *
   * @generated from field: int64 index = 2;
   */
  index: bigint;

  /**
   * @generated from field: dapr.proto.runtime.v1.ConversationResultMessage message = 3;
   */
  message?: ConversationResultMessage;
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResultChoices.
 * Use `create(ConversationResultChoicesSchema)` to create a new message.
 */
export declare const ConversationResultChoicesSchema: GenMessage<ConversationResultChoices>;

/**
 * inspired by openai.ChatCompletionMessage
 * based on https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1218C6-L1218C27
 *
 * @generated from message dapr.proto.runtime.v1.ConversationResultMessage
 */
export declare type ConversationResultMessage = Message<"dapr.proto.runtime.v1.ConversationResultMessage"> & {
  /**
   * The contents of the message.
   *
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * The tool calls generated by the model.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationToolCalls tool_calls = 2;
   */
  toolCalls: ConversationToolCalls[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResultMessage.
 * Use `create(ConversationResultMessageSchema)` to create a new message.
 */
export declare const ConversationResultMessageSchema: GenMessage<ConversationResultMessage>;

/**
 * ConversationResponse is the response for Conversation.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationResponse
 * @deprecated
 */
export declare type ConversationResponse = Message<"dapr.proto.runtime.v1.ConversationResponse"> & {
  /**
   * The ID of an existing chat (like in ChatGPT)
   *
   * @generated from field: optional string contextID = 1;
   */
  contextID?: string;

  /**
   * An array of results.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationResult outputs = 2;
   */
  outputs: ConversationResult[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResponse.
 * Use `create(ConversationResponseSchema)` to create a new message.
 * @deprecated
 */
export declare const ConversationResponseSchema: GenMessage<ConversationResponse>;

/**
 * ConversationResponseAlpha2 is the Alpha2 response for Conversation.
 *
 * @generated from message dapr.proto.runtime.v1.ConversationResponseAlpha2
 */
export declare type ConversationResponseAlpha2 = Message<"dapr.proto.runtime.v1.ConversationResponseAlpha2"> & {
  /**
   * The ID of an existing chat (like in ChatGPT)
   *
   * @generated from field: optional string context_id = 1;
   */
  contextId?: string;

  /**
   * An array of results.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.ConversationResultAlpha2 outputs = 2;
   */
  outputs: ConversationResultAlpha2[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResponseAlpha2.
 * Use `create(ConversationResponseAlpha2Schema)` to create a new message.
 */
export declare const ConversationResponseAlpha2Schema: GenMessage<ConversationResponseAlpha2>;

/**
 * ConversationTools are the typed tools available to be called.
 * inspired by openai.ChatCompletionToolParam
 * https://github.com/openai/openai-go/blob/main/chatcompletion.go#L1950
 *
 * @generated from message dapr.proto.runtime.v1.ConversationTools
 */
export declare type ConversationTools = Message<"dapr.proto.runtime.v1.ConversationTools"> & {
  /**
   * @generated from oneof dapr.proto.runtime.v1.ConversationTools.tool_types
   */
  toolTypes: {
    /**
     * @generated from field: dapr.proto.runtime.v1.ConversationToolsFunction function = 1;
     */
    value: ConversationToolsFunction;
    case: "function";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationTools.
 * Use `create(ConversationToolsSchema)` to create a new message.
 */
export declare const ConversationToolsSchema: GenMessage<ConversationTools>;

/**
 * ConversationToolsFunction is the main tool type to be used in a conversation.
 * inspired by openai.FunctionDefinitionParam
 * https://pkg.go.dev/github.com/openai/openai-go/shared#FunctionDefinitionParam
 *
 * @generated from message dapr.proto.runtime.v1.ConversationToolsFunction
 */
export declare type ConversationToolsFunction = Message<"dapr.proto.runtime.v1.ConversationToolsFunction"> & {
  /**
   * The name of the function to be called.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A description of what the function does, 
   * used by the model to choose when and how to call the function.
   *
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * The parameters the functions accepts, described as a JSON Schema object. 
   * See the [guide](https://platform.openai.com/docs/guides/function-calling) for examples,
   * and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format.	
   * Omitting `parameters` defines a function with an empty parameter list.
   *
   * @generated from field: google.protobuf.Struct parameters = 3;
   */
  parameters?: JsonObject;
};

/**
 * Describes the message dapr.proto.runtime.v1.ConversationToolsFunction.
 * Use `create(ConversationToolsFunctionSchema)` to create a new message.
 */
export declare const ConversationToolsFunctionSchema: GenMessage<ConversationToolsFunction>;

/**
 * PubsubSubscriptionType indicates the type of subscription
 *
 * @generated from enum dapr.proto.runtime.v1.PubsubSubscriptionType
 */
export enum PubsubSubscriptionType {
  /**
   * UNKNOWN is the default value for the subscription type.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Declarative subscription (k8s CRD)
   *
   * @generated from enum value: DECLARATIVE = 1;
   */
  DECLARATIVE = 1,

  /**
   * Programmatically created subscription
   *
   * @generated from enum value: PROGRAMMATIC = 2;
   */
  PROGRAMMATIC = 2,

  /**
   * Bidirectional Streaming subscription
   *
   * @generated from enum value: STREAMING = 3;
   */
  STREAMING = 3,
}

/**
 * Describes the enum dapr.proto.runtime.v1.PubsubSubscriptionType.
 */
export declare const PubsubSubscriptionTypeSchema: GenEnum<PubsubSubscriptionType>;

/**
 * Dapr service provides APIs to user application to access Dapr building blocks.
 *
 * @generated from service dapr.proto.runtime.v1.Dapr
 */
export declare const Dapr: GenService<{
  /**
   * Invokes a method on a remote Dapr app.
   * Deprecated: Use proxy mode service invocation instead.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.InvokeService
   */
  invokeService: {
    methodKind: "unary";
    input: typeof InvokeServiceRequestSchema;
    output: typeof InvokeResponseSchema;
  },
  /**
   * Gets the state for a specific key.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetState
   */
  getState: {
    methodKind: "unary";
    input: typeof GetStateRequestSchema;
    output: typeof GetStateResponseSchema;
  },
  /**
   * Gets a bulk of state items for a list of keys
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetBulkState
   */
  getBulkState: {
    methodKind: "unary";
    input: typeof GetBulkStateRequestSchema;
    output: typeof GetBulkStateResponseSchema;
  },
  /**
   * Saves the state for a specific key.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SaveState
   */
  saveState: {
    methodKind: "unary";
    input: typeof SaveStateRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Queries the state.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.QueryStateAlpha1
   */
  queryStateAlpha1: {
    methodKind: "unary";
    input: typeof QueryStateRequestSchema;
    output: typeof QueryStateResponseSchema;
  },
  /**
   * Deletes the state for a specific key.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.DeleteState
   */
  deleteState: {
    methodKind: "unary";
    input: typeof DeleteStateRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Deletes a bulk of state items for a list of keys
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.DeleteBulkState
   */
  deleteBulkState: {
    methodKind: "unary";
    input: typeof DeleteBulkStateRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Executes transactions for a specified store
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.ExecuteStateTransaction
   */
  executeStateTransaction: {
    methodKind: "unary";
    input: typeof ExecuteStateTransactionRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Publishes events to the specific topic.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.PublishEvent
   */
  publishEvent: {
    methodKind: "unary";
    input: typeof PublishEventRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Bulk Publishes multiple events to the specified topic.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.BulkPublishEventAlpha1
   */
  bulkPublishEventAlpha1: {
    methodKind: "unary";
    input: typeof BulkPublishRequestSchema;
    output: typeof BulkPublishResponseSchema;
  },
  /**
   * SubscribeTopicEventsAlpha1 subscribes to a PubSub topic and receives topic
   * events from it.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubscribeTopicEventsAlpha1
   */
  subscribeTopicEventsAlpha1: {
    methodKind: "bidi_streaming";
    input: typeof SubscribeTopicEventsRequestAlpha1Schema;
    output: typeof SubscribeTopicEventsResponseAlpha1Schema;
  },
  /**
   * Invokes binding data to specific output bindings
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.InvokeBinding
   */
  invokeBinding: {
    methodKind: "unary";
    input: typeof InvokeBindingRequestSchema;
    output: typeof InvokeBindingResponseSchema;
  },
  /**
   * Gets secrets from secret stores.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetSecret
   */
  getSecret: {
    methodKind: "unary";
    input: typeof GetSecretRequestSchema;
    output: typeof GetSecretResponseSchema;
  },
  /**
   * Gets a bulk of secrets
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetBulkSecret
   */
  getBulkSecret: {
    methodKind: "unary";
    input: typeof GetBulkSecretRequestSchema;
    output: typeof GetBulkSecretResponseSchema;
  },
  /**
   * Register an actor timer.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.RegisterActorTimer
   */
  registerActorTimer: {
    methodKind: "unary";
    input: typeof RegisterActorTimerRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Unregister an actor timer.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.UnregisterActorTimer
   */
  unregisterActorTimer: {
    methodKind: "unary";
    input: typeof UnregisterActorTimerRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Register an actor reminder.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.RegisterActorReminder
   */
  registerActorReminder: {
    methodKind: "unary";
    input: typeof RegisterActorReminderRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Unregister an actor reminder.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.UnregisterActorReminder
   */
  unregisterActorReminder: {
    methodKind: "unary";
    input: typeof UnregisterActorReminderRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets the state for a specific actor.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetActorState
   */
  getActorState: {
    methodKind: "unary";
    input: typeof GetActorStateRequestSchema;
    output: typeof GetActorStateResponseSchema;
  },
  /**
   * Executes state transactions for a specified actor
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.ExecuteActorStateTransaction
   */
  executeActorStateTransaction: {
    methodKind: "unary";
    input: typeof ExecuteActorStateTransactionRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * InvokeActor calls a method on an actor.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.InvokeActor
   */
  invokeActor: {
    methodKind: "unary";
    input: typeof InvokeActorRequestSchema;
    output: typeof InvokeActorResponseSchema;
  },
  /**
   * GetConfiguration gets configuration from configuration store.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetConfigurationAlpha1
   */
  getConfigurationAlpha1: {
    methodKind: "unary";
    input: typeof GetConfigurationRequestSchema;
    output: typeof GetConfigurationResponseSchema;
  },
  /**
   * GetConfiguration gets configuration from configuration store.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetConfiguration
   */
  getConfiguration: {
    methodKind: "unary";
    input: typeof GetConfigurationRequestSchema;
    output: typeof GetConfigurationResponseSchema;
  },
  /**
   * SubscribeConfiguration gets configuration from configuration store and subscribe the updates event by grpc stream
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubscribeConfigurationAlpha1
   */
  subscribeConfigurationAlpha1: {
    methodKind: "server_streaming";
    input: typeof SubscribeConfigurationRequestSchema;
    output: typeof SubscribeConfigurationResponseSchema;
  },
  /**
   * SubscribeConfiguration gets configuration from configuration store and subscribe the updates event by grpc stream
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubscribeConfiguration
   */
  subscribeConfiguration: {
    methodKind: "server_streaming";
    input: typeof SubscribeConfigurationRequestSchema;
    output: typeof SubscribeConfigurationResponseSchema;
  },
  /**
   * UnSubscribeConfiguration unsubscribe the subscription of configuration
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.UnsubscribeConfigurationAlpha1
   */
  unsubscribeConfigurationAlpha1: {
    methodKind: "unary";
    input: typeof UnsubscribeConfigurationRequestSchema;
    output: typeof UnsubscribeConfigurationResponseSchema;
  },
  /**
   * UnSubscribeConfiguration unsubscribe the subscription of configuration
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.UnsubscribeConfiguration
   */
  unsubscribeConfiguration: {
    methodKind: "unary";
    input: typeof UnsubscribeConfigurationRequestSchema;
    output: typeof UnsubscribeConfigurationResponseSchema;
  },
  /**
   * TryLockAlpha1 tries to get a lock with an expiry.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.TryLockAlpha1
   */
  tryLockAlpha1: {
    methodKind: "unary";
    input: typeof TryLockRequestSchema;
    output: typeof TryLockResponseSchema;
  },
  /**
   * UnlockAlpha1 unlocks a lock.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.UnlockAlpha1
   */
  unlockAlpha1: {
    methodKind: "unary";
    input: typeof UnlockRequestSchema;
    output: typeof UnlockResponseSchema;
  },
  /**
   * EncryptAlpha1 encrypts a message using the Dapr encryption scheme and a key stored in the vault.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.EncryptAlpha1
   */
  encryptAlpha1: {
    methodKind: "bidi_streaming";
    input: typeof EncryptRequestSchema;
    output: typeof EncryptResponseSchema;
  },
  /**
   * DecryptAlpha1 decrypts a message using the Dapr encryption scheme and a key stored in the vault.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.DecryptAlpha1
   */
  decryptAlpha1: {
    methodKind: "bidi_streaming";
    input: typeof DecryptRequestSchema;
    output: typeof DecryptResponseSchema;
  },
  /**
   * Gets metadata of the sidecar
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetMetadata
   */
  getMetadata: {
    methodKind: "unary";
    input: typeof GetMetadataRequestSchema;
    output: typeof GetMetadataResponseSchema;
  },
  /**
   * Sets value in extended metadata of the sidecar
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SetMetadata
   */
  setMetadata: {
    methodKind: "unary";
    input: typeof SetMetadataRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * SubtleGetKeyAlpha1 returns the public part of an asymmetric key stored in the vault.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubtleGetKeyAlpha1
   */
  subtleGetKeyAlpha1: {
    methodKind: "unary";
    input: typeof SubtleGetKeyRequestSchema;
    output: typeof SubtleGetKeyResponseSchema;
  },
  /**
   * SubtleEncryptAlpha1 encrypts a small message using a key stored in the vault.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubtleEncryptAlpha1
   */
  subtleEncryptAlpha1: {
    methodKind: "unary";
    input: typeof SubtleEncryptRequestSchema;
    output: typeof SubtleEncryptResponseSchema;
  },
  /**
   * SubtleDecryptAlpha1 decrypts a small message using a key stored in the vault.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubtleDecryptAlpha1
   */
  subtleDecryptAlpha1: {
    methodKind: "unary";
    input: typeof SubtleDecryptRequestSchema;
    output: typeof SubtleDecryptResponseSchema;
  },
  /**
   * SubtleWrapKeyAlpha1 wraps a key using a key stored in the vault.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubtleWrapKeyAlpha1
   */
  subtleWrapKeyAlpha1: {
    methodKind: "unary";
    input: typeof SubtleWrapKeyRequestSchema;
    output: typeof SubtleWrapKeyResponseSchema;
  },
  /**
   * SubtleUnwrapKeyAlpha1 unwraps a key using a key stored in the vault.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubtleUnwrapKeyAlpha1
   */
  subtleUnwrapKeyAlpha1: {
    methodKind: "unary";
    input: typeof SubtleUnwrapKeyRequestSchema;
    output: typeof SubtleUnwrapKeyResponseSchema;
  },
  /**
   * SubtleSignAlpha1 signs a message using a key stored in the vault.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubtleSignAlpha1
   */
  subtleSignAlpha1: {
    methodKind: "unary";
    input: typeof SubtleSignRequestSchema;
    output: typeof SubtleSignResponseSchema;
  },
  /**
   * SubtleVerifyAlpha1 verifies the signature of a message using a key stored in the vault.
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.SubtleVerifyAlpha1
   */
  subtleVerifyAlpha1: {
    methodKind: "unary";
    input: typeof SubtleVerifyRequestSchema;
    output: typeof SubtleVerifyResponseSchema;
  },
  /**
   * Starts a new instance of a workflow
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.StartWorkflowAlpha1
   * @deprecated
   */
  startWorkflowAlpha1: {
    methodKind: "unary";
    input: typeof StartWorkflowRequestSchema;
    output: typeof StartWorkflowResponseSchema;
  },
  /**
   * Gets details about a started workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetWorkflowAlpha1
   * @deprecated
   */
  getWorkflowAlpha1: {
    methodKind: "unary";
    input: typeof GetWorkflowRequestSchema;
    output: typeof GetWorkflowResponseSchema;
  },
  /**
   * Purge Workflow
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.PurgeWorkflowAlpha1
   * @deprecated
   */
  purgeWorkflowAlpha1: {
    methodKind: "unary";
    input: typeof PurgeWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Terminates a running workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.TerminateWorkflowAlpha1
   * @deprecated
   */
  terminateWorkflowAlpha1: {
    methodKind: "unary";
    input: typeof TerminateWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Pauses a running workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.PauseWorkflowAlpha1
   * @deprecated
   */
  pauseWorkflowAlpha1: {
    methodKind: "unary";
    input: typeof PauseWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Resumes a paused workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.ResumeWorkflowAlpha1
   * @deprecated
   */
  resumeWorkflowAlpha1: {
    methodKind: "unary";
    input: typeof ResumeWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Raise an event to a running workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.RaiseEventWorkflowAlpha1
   * @deprecated
   */
  raiseEventWorkflowAlpha1: {
    methodKind: "unary";
    input: typeof RaiseEventWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Starts a new instance of a workflow
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.StartWorkflowBeta1
   */
  startWorkflowBeta1: {
    methodKind: "unary";
    input: typeof StartWorkflowRequestSchema;
    output: typeof StartWorkflowResponseSchema;
  },
  /**
   * Gets details about a started workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetWorkflowBeta1
   */
  getWorkflowBeta1: {
    methodKind: "unary";
    input: typeof GetWorkflowRequestSchema;
    output: typeof GetWorkflowResponseSchema;
  },
  /**
   * Purge Workflow
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.PurgeWorkflowBeta1
   */
  purgeWorkflowBeta1: {
    methodKind: "unary";
    input: typeof PurgeWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Terminates a running workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.TerminateWorkflowBeta1
   */
  terminateWorkflowBeta1: {
    methodKind: "unary";
    input: typeof TerminateWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Pauses a running workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.PauseWorkflowBeta1
   */
  pauseWorkflowBeta1: {
    methodKind: "unary";
    input: typeof PauseWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Resumes a paused workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.ResumeWorkflowBeta1
   */
  resumeWorkflowBeta1: {
    methodKind: "unary";
    input: typeof ResumeWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Raise an event to a running workflow instance
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.RaiseEventWorkflowBeta1
   */
  raiseEventWorkflowBeta1: {
    methodKind: "unary";
    input: typeof RaiseEventWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Shutdown the sidecar
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.Shutdown
   */
  shutdown: {
    methodKind: "unary";
    input: typeof ShutdownRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Create and schedule a job
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.ScheduleJobAlpha1
   */
  scheduleJobAlpha1: {
    methodKind: "unary";
    input: typeof ScheduleJobRequestSchema;
    output: typeof ScheduleJobResponseSchema;
  },
  /**
   * Gets a scheduled job
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.GetJobAlpha1
   */
  getJobAlpha1: {
    methodKind: "unary";
    input: typeof GetJobRequestSchema;
    output: typeof GetJobResponseSchema;
  },
  /**
   * Delete a job
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.DeleteJobAlpha1
   */
  deleteJobAlpha1: {
    methodKind: "unary";
    input: typeof DeleteJobRequestSchema;
    output: typeof DeleteJobResponseSchema;
  },
  /**
   * Converse with a LLM service
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.ConverseAlpha1
   */
  converseAlpha1: {
    methodKind: "unary";
    input: typeof ConversationRequestSchema;
    output: typeof ConversationResponseSchema;
  },
  /**
   * Converse with a LLM service via alpha2 api
   *
   * @generated from rpc dapr.proto.runtime.v1.Dapr.ConverseAlpha2
   */
  converseAlpha2: {
    methodKind: "unary";
    input: typeof ConversationRequestAlpha2Schema;
    output: typeof ConversationResponseAlpha2Schema;
  },
}>;

