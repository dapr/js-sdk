//
//Copyright 2021 The Dapr Authors
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//http://www.apache.org/licenses/LICENSE-2.0
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=none"
// @generated from file dapr/proto/runtime/v1/appcallback.proto (package dapr.proto.runtime.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { Any, EmptySchema } from "@bufbuild/protobuf/wkt";
import type { HTTPExtension, InvokeRequestSchema, InvokeResponseSchema, StateItem } from "../../common/v1/common_pb";

/**
 * Describes the file dapr/proto/runtime/v1/appcallback.proto.
 */
export declare const file_dapr_proto_runtime_v1_appcallback: GenFile;

/**
 * @generated from message dapr.proto.runtime.v1.JobEventRequest
 */
export declare type JobEventRequest = Message<"dapr.proto.runtime.v1.JobEventRequest"> & {
  /**
   * Job name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Job data to be sent back to app.
   *
   * @generated from field: google.protobuf.Any data = 2;
   */
  data?: Any;

  /**
   * Required. method is a method name which will be invoked by caller.
   *
   * @generated from field: string method = 3;
   */
  method: string;

  /**
   * The type of data content.
   *
   * This field is required if data delivers http request body
   * Otherwise, this is optional.
   *
   * @generated from field: string content_type = 4;
   */
  contentType: string;

  /**
   * HTTP specific fields if request conveys http-compatible request.
   *
   * This field is required for http-compatible request. Otherwise,
   * this field is optional.
   *
   * @generated from field: dapr.proto.common.v1.HTTPExtension http_extension = 5;
   */
  httpExtension?: HTTPExtension;
};

/**
 * Describes the message dapr.proto.runtime.v1.JobEventRequest.
 * Use `create(JobEventRequestSchema)` to create a new message.
 */
export declare const JobEventRequestSchema: GenMessage<JobEventRequest>;

/**
 * JobEventResponse is the response from the app when a job is triggered.
 *
 * @generated from message dapr.proto.runtime.v1.JobEventResponse
 */
export declare type JobEventResponse = Message<"dapr.proto.runtime.v1.JobEventResponse"> & {
};

/**
 * Describes the message dapr.proto.runtime.v1.JobEventResponse.
 * Use `create(JobEventResponseSchema)` to create a new message.
 */
export declare const JobEventResponseSchema: GenMessage<JobEventResponse>;

/**
 * TopicEventRequest message is compatible with CloudEvent spec v1.0
 * https://github.com/cloudevents/spec/blob/v1.0/spec.md
 *
 * @generated from message dapr.proto.runtime.v1.TopicEventRequest
 */
export declare type TopicEventRequest = Message<"dapr.proto.runtime.v1.TopicEventRequest"> & {
  /**
   * id identifies the event. Producers MUST ensure that source + id 
   * is unique for each distinct event. If a duplicate event is re-sent
   * (e.g. due to a network error) it MAY have the same id. 
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * source identifies the context in which an event happened.
   * Often this will include information such as the type of the
   * event source, the organization publishing the event or the process
   * that produced the event. The exact syntax and semantics behind
   * the data encoded in the URI is defined by the event producer.
   *
   * @generated from field: string source = 2;
   */
  source: string;

  /**
   * The type of event related to the originating occurrence. 
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * The version of the CloudEvents specification. 
   *
   * @generated from field: string spec_version = 4;
   */
  specVersion: string;

  /**
   * The content type of data value.
   *
   * @generated from field: string data_content_type = 5;
   */
  dataContentType: string;

  /**
   * The content of the event.
   *
   * @generated from field: bytes data = 7;
   */
  data: Uint8Array;

  /**
   * The pubsub topic which publisher sent to.
   *
   * @generated from field: string topic = 6;
   */
  topic: string;

  /**
   * The name of the pubsub the publisher sent to.
   *
   * @generated from field: string pubsub_name = 8;
   */
  pubsubName: string;

  /**
   * The matching path from TopicSubscription/routes (if specified) for this event.
   * This value is used by OnTopicEvent to "switch" inside the handler.
   *
   * @generated from field: string path = 9;
   */
  path: string;

  /**
   * The map of additional custom properties to be sent to the app. These are considered to be cloud event extensions.
   *
   * @generated from field: google.protobuf.Struct extensions = 10;
   */
  extensions?: JsonObject;
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicEventRequest.
 * Use `create(TopicEventRequestSchema)` to create a new message.
 */
export declare const TopicEventRequestSchema: GenMessage<TopicEventRequest>;

/**
 * TopicEventResponse is response from app on published message
 *
 * @generated from message dapr.proto.runtime.v1.TopicEventResponse
 */
export declare type TopicEventResponse = Message<"dapr.proto.runtime.v1.TopicEventResponse"> & {
  /**
   * The list of output bindings.
   *
   * @generated from field: dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 1;
   */
  status: TopicEventResponse_TopicEventResponseStatus;
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicEventResponse.
 * Use `create(TopicEventResponseSchema)` to create a new message.
 */
export declare const TopicEventResponseSchema: GenMessage<TopicEventResponse>;

/**
 * TopicEventResponseStatus allows apps to have finer control over handling of the message.
 *
 * @generated from enum dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus
 */
export enum TopicEventResponse_TopicEventResponseStatus {
  /**
   * SUCCESS is the default behavior: message is acknowledged and not retried or logged.
   *
   * @generated from enum value: SUCCESS = 0;
   */
  SUCCESS = 0,

  /**
   * RETRY status signals Dapr to retry the message as part of an expected scenario (no warning is logged).
   *
   * @generated from enum value: RETRY = 1;
   */
  RETRY = 1,

  /**
   * DROP status signals Dapr to drop the message as part of an unexpected scenario (warning is logged).
   *
   * @generated from enum value: DROP = 2;
   */
  DROP = 2,
}

/**
 * Describes the enum dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus.
 */
export declare const TopicEventResponse_TopicEventResponseStatusSchema: GenEnum<TopicEventResponse_TopicEventResponseStatus>;

/**
 * TopicEventCERequest message is compatible with CloudEvent spec v1.0
 *
 * @generated from message dapr.proto.runtime.v1.TopicEventCERequest
 */
export declare type TopicEventCERequest = Message<"dapr.proto.runtime.v1.TopicEventCERequest"> & {
  /**
   * The unique identifier of this cloud event.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * source identifies the context in which an event happened.
   *
   * @generated from field: string source = 2;
   */
  source: string;

  /**
   * The type of event related to the originating occurrence. 
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * The version of the CloudEvents specification. 
   *
   * @generated from field: string spec_version = 4;
   */
  specVersion: string;

  /**
   * The content type of data value.
   *
   * @generated from field: string data_content_type = 5;
   */
  dataContentType: string;

  /**
   * The content of the event.
   *
   * @generated from field: bytes data = 6;
   */
  data: Uint8Array;

  /**
   * Custom attributes which includes cloud event extensions.
   *
   * @generated from field: google.protobuf.Struct extensions = 7;
   */
  extensions?: JsonObject;
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicEventCERequest.
 * Use `create(TopicEventCERequestSchema)` to create a new message.
 */
export declare const TopicEventCERequestSchema: GenMessage<TopicEventCERequest>;

/**
 * TopicEventBulkRequestEntry represents a single message inside a bulk request
 *
 * @generated from message dapr.proto.runtime.v1.TopicEventBulkRequestEntry
 */
export declare type TopicEventBulkRequestEntry = Message<"dapr.proto.runtime.v1.TopicEventBulkRequestEntry"> & {
  /**
   * Unique identifier for the message.
   *
   * @generated from field: string entry_id = 1;
   */
  entryId: string;

  /**
   * The content of the event.
   *
   * @generated from oneof dapr.proto.runtime.v1.TopicEventBulkRequestEntry.event
   */
  event: {
    /**
     * @generated from field: bytes bytes = 2;
     */
    value: Uint8Array;
    case: "bytes";
  } | {
    /**
     * @generated from field: dapr.proto.runtime.v1.TopicEventCERequest cloud_event = 3;
     */
    value: TopicEventCERequest;
    case: "cloudEvent";
  } | { case: undefined; value?: undefined };

  /**
   * content type of the event contained.
   *
   * @generated from field: string content_type = 4;
   */
  contentType: string;

  /**
   * The metadata associated with the event.
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicEventBulkRequestEntry.
 * Use `create(TopicEventBulkRequestEntrySchema)` to create a new message.
 */
export declare const TopicEventBulkRequestEntrySchema: GenMessage<TopicEventBulkRequestEntry>;

/**
 * TopicEventBulkRequest represents request for bulk message
 *
 * @generated from message dapr.proto.runtime.v1.TopicEventBulkRequest
 */
export declare type TopicEventBulkRequest = Message<"dapr.proto.runtime.v1.TopicEventBulkRequest"> & {
  /**
   * Unique identifier for the bulk request.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The list of items inside this bulk request.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.TopicEventBulkRequestEntry entries = 2;
   */
  entries: TopicEventBulkRequestEntry[];

  /**
   * The metadata associated with the this bulk request.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };

  /**
   * The pubsub topic which publisher sent to.
   *
   * @generated from field: string topic = 4;
   */
  topic: string;

  /**
   * The name of the pubsub the publisher sent to.
   *
   * @generated from field: string pubsub_name = 5;
   */
  pubsubName: string;

  /**
   * The type of event related to the originating occurrence. 
   *
   * @generated from field: string type = 6;
   */
  type: string;

  /**
   * The matching path from TopicSubscription/routes (if specified) for this event.
   * This value is used by OnTopicEvent to "switch" inside the handler.
   *
   * @generated from field: string path = 7;
   */
  path: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicEventBulkRequest.
 * Use `create(TopicEventBulkRequestSchema)` to create a new message.
 */
export declare const TopicEventBulkRequestSchema: GenMessage<TopicEventBulkRequest>;

/**
 * TopicEventBulkResponseEntry Represents single response, as part of TopicEventBulkResponse, to be
 * sent by subscibed App for the corresponding single message during bulk subscribe
 *
 * @generated from message dapr.proto.runtime.v1.TopicEventBulkResponseEntry
 */
export declare type TopicEventBulkResponseEntry = Message<"dapr.proto.runtime.v1.TopicEventBulkResponseEntry"> & {
  /**
   * Unique identifier associated the message.
   *
   * @generated from field: string entry_id = 1;
   */
  entryId: string;

  /**
   * The status of the response.
   *
   * @generated from field: dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 2;
   */
  status: TopicEventResponse_TopicEventResponseStatus;
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicEventBulkResponseEntry.
 * Use `create(TopicEventBulkResponseEntrySchema)` to create a new message.
 */
export declare const TopicEventBulkResponseEntrySchema: GenMessage<TopicEventBulkResponseEntry>;

/**
 * AppBulkResponse is response from app on published message
 *
 * @generated from message dapr.proto.runtime.v1.TopicEventBulkResponse
 */
export declare type TopicEventBulkResponse = Message<"dapr.proto.runtime.v1.TopicEventBulkResponse"> & {
  /**
   * The list of all responses for the bulk request.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.TopicEventBulkResponseEntry statuses = 1;
   */
  statuses: TopicEventBulkResponseEntry[];
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicEventBulkResponse.
 * Use `create(TopicEventBulkResponseSchema)` to create a new message.
 */
export declare const TopicEventBulkResponseSchema: GenMessage<TopicEventBulkResponse>;

/**
 * BindingEventRequest represents input bindings event.
 *
 * @generated from message dapr.proto.runtime.v1.BindingEventRequest
 */
export declare type BindingEventRequest = Message<"dapr.proto.runtime.v1.BindingEventRequest"> & {
  /**
   * Required. The name of the input binding component.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The payload that the input bindings sent
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * The metadata set by the input binging components.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.runtime.v1.BindingEventRequest.
 * Use `create(BindingEventRequestSchema)` to create a new message.
 */
export declare const BindingEventRequestSchema: GenMessage<BindingEventRequest>;

/**
 * BindingEventResponse includes operations to save state or
 * send data to output bindings optionally.
 *
 * @generated from message dapr.proto.runtime.v1.BindingEventResponse
 */
export declare type BindingEventResponse = Message<"dapr.proto.runtime.v1.BindingEventResponse"> & {
  /**
   * The name of state store where states are saved.
   *
   * @generated from field: string store_name = 1;
   */
  storeName: string;

  /**
   * The state key values which will be stored in store_name.
   *
   * @generated from field: repeated dapr.proto.common.v1.StateItem states = 2;
   */
  states: StateItem[];

  /**
   * The list of output bindings.
   *
   * @generated from field: repeated string to = 3;
   */
  to: string[];

  /**
   * The content which will be sent to "to" output bindings.
   *
   * @generated from field: bytes data = 4;
   */
  data: Uint8Array;

  /**
   * The concurrency of output bindings to send data to
   * "to" output bindings list. The default is SEQUENTIAL.
   *
   * @generated from field: dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency concurrency = 5;
   */
  concurrency: BindingEventResponse_BindingEventConcurrency;
};

/**
 * Describes the message dapr.proto.runtime.v1.BindingEventResponse.
 * Use `create(BindingEventResponseSchema)` to create a new message.
 */
export declare const BindingEventResponseSchema: GenMessage<BindingEventResponse>;

/**
 * BindingEventConcurrency is the kind of concurrency 
 *
 * @generated from enum dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency
 */
export enum BindingEventResponse_BindingEventConcurrency {
  /**
   * SEQUENTIAL sends data to output bindings specified in "to" sequentially.
   *
   * @generated from enum value: SEQUENTIAL = 0;
   */
  SEQUENTIAL = 0,

  /**
   * PARALLEL sends data to output bindings specified in "to" in parallel.
   *
   * @generated from enum value: PARALLEL = 1;
   */
  PARALLEL = 1,
}

/**
 * Describes the enum dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency.
 */
export declare const BindingEventResponse_BindingEventConcurrencySchema: GenEnum<BindingEventResponse_BindingEventConcurrency>;

/**
 * ListTopicSubscriptionsResponse is the message including the list of the subscribing topics.
 *
 * @generated from message dapr.proto.runtime.v1.ListTopicSubscriptionsResponse
 */
export declare type ListTopicSubscriptionsResponse = Message<"dapr.proto.runtime.v1.ListTopicSubscriptionsResponse"> & {
  /**
   * The list of topics.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.TopicSubscription subscriptions = 1;
   */
  subscriptions: TopicSubscription[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ListTopicSubscriptionsResponse.
 * Use `create(ListTopicSubscriptionsResponseSchema)` to create a new message.
 */
export declare const ListTopicSubscriptionsResponseSchema: GenMessage<ListTopicSubscriptionsResponse>;

/**
 * TopicSubscription represents topic and metadata.
 *
 * @generated from message dapr.proto.runtime.v1.TopicSubscription
 */
export declare type TopicSubscription = Message<"dapr.proto.runtime.v1.TopicSubscription"> & {
  /**
   * Required. The name of the pubsub containing the topic below to subscribe to.
   *
   * @generated from field: string pubsub_name = 1;
   */
  pubsubName: string;

  /**
   * Required. The name of topic which will be subscribed
   *
   * @generated from field: string topic = 2;
   */
  topic: string;

  /**
   * The optional properties used for this topic's subscription e.g. session id
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };

  /**
   * The optional routing rules to match against. In the gRPC interface, OnTopicEvent
   * is still invoked but the matching path is sent in the TopicEventRequest.
   *
   * @generated from field: dapr.proto.runtime.v1.TopicRoutes routes = 5;
   */
  routes?: TopicRoutes;

  /**
   * The optional dead letter queue for this topic to send events to.
   *
   * @generated from field: string dead_letter_topic = 6;
   */
  deadLetterTopic: string;

  /**
   * The optional bulk subscribe settings for this topic.
   *
   * @generated from field: dapr.proto.runtime.v1.BulkSubscribeConfig bulk_subscribe = 7;
   */
  bulkSubscribe?: BulkSubscribeConfig;
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicSubscription.
 * Use `create(TopicSubscriptionSchema)` to create a new message.
 */
export declare const TopicSubscriptionSchema: GenMessage<TopicSubscription>;

/**
 * @generated from message dapr.proto.runtime.v1.TopicRoutes
 */
export declare type TopicRoutes = Message<"dapr.proto.runtime.v1.TopicRoutes"> & {
  /**
   * The list of rules for this topic.
   *
   * @generated from field: repeated dapr.proto.runtime.v1.TopicRule rules = 1;
   */
  rules: TopicRule[];

  /**
   * The default path for this topic.
   *
   * @generated from field: string default = 2;
   */
  default: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicRoutes.
 * Use `create(TopicRoutesSchema)` to create a new message.
 */
export declare const TopicRoutesSchema: GenMessage<TopicRoutes>;

/**
 * @generated from message dapr.proto.runtime.v1.TopicRule
 */
export declare type TopicRule = Message<"dapr.proto.runtime.v1.TopicRule"> & {
  /**
   * The optional CEL expression used to match the event.
   * If the match is not specified, then the route is considered
   * the default.
   *
   * @generated from field: string match = 1;
   */
  match: string;

  /**
   * The path used to identify matches for this subscription.
   * This value is passed in TopicEventRequest and used by OnTopicEvent to "switch"
   * inside the handler.
   *
   * @generated from field: string path = 2;
   */
  path: string;
};

/**
 * Describes the message dapr.proto.runtime.v1.TopicRule.
 * Use `create(TopicRuleSchema)` to create a new message.
 */
export declare const TopicRuleSchema: GenMessage<TopicRule>;

/**
 * BulkSubscribeConfig is the message to pass settings for bulk subscribe
 *
 * @generated from message dapr.proto.runtime.v1.BulkSubscribeConfig
 */
export declare type BulkSubscribeConfig = Message<"dapr.proto.runtime.v1.BulkSubscribeConfig"> & {
  /**
   * Required. Flag to enable/disable bulk subscribe
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Optional. Max number of messages to be sent in a single bulk request
   *
   * @generated from field: int32 max_messages_count = 2;
   */
  maxMessagesCount: number;

  /**
   * Optional. Max duration to wait for messages to be sent in a single bulk request
   *
   * @generated from field: int32 max_await_duration_ms = 3;
   */
  maxAwaitDurationMs: number;
};

/**
 * Describes the message dapr.proto.runtime.v1.BulkSubscribeConfig.
 * Use `create(BulkSubscribeConfigSchema)` to create a new message.
 */
export declare const BulkSubscribeConfigSchema: GenMessage<BulkSubscribeConfig>;

/**
 * ListInputBindingsResponse is the message including the list of input bindings.
 *
 * @generated from message dapr.proto.runtime.v1.ListInputBindingsResponse
 */
export declare type ListInputBindingsResponse = Message<"dapr.proto.runtime.v1.ListInputBindingsResponse"> & {
  /**
   * The list of input bindings.
   *
   * @generated from field: repeated string bindings = 1;
   */
  bindings: string[];
};

/**
 * Describes the message dapr.proto.runtime.v1.ListInputBindingsResponse.
 * Use `create(ListInputBindingsResponseSchema)` to create a new message.
 */
export declare const ListInputBindingsResponseSchema: GenMessage<ListInputBindingsResponse>;

/**
 * HealthCheckResponse is the message with the response to the health check.
 * This message is currently empty as used as placeholder.
 *
 * @generated from message dapr.proto.runtime.v1.HealthCheckResponse
 */
export declare type HealthCheckResponse = Message<"dapr.proto.runtime.v1.HealthCheckResponse"> & {
};

/**
 * Describes the message dapr.proto.runtime.v1.HealthCheckResponse.
 * Use `create(HealthCheckResponseSchema)` to create a new message.
 */
export declare const HealthCheckResponseSchema: GenMessage<HealthCheckResponse>;

/**
 * AppCallback V1 allows user application to interact with Dapr runtime.
 * User application needs to implement AppCallback service if it needs to
 * receive message from dapr runtime.
 *
 * @generated from service dapr.proto.runtime.v1.AppCallback
 */
export declare const AppCallback: GenService<{
  /**
   * Invokes service method with InvokeRequest.
   *
   * @generated from rpc dapr.proto.runtime.v1.AppCallback.OnInvoke
   */
  onInvoke: {
    methodKind: "unary";
    input: typeof InvokeRequestSchema;
    output: typeof InvokeResponseSchema;
  },
  /**
   * Lists all topics subscribed by this app.
   *
   * @generated from rpc dapr.proto.runtime.v1.AppCallback.ListTopicSubscriptions
   */
  listTopicSubscriptions: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ListTopicSubscriptionsResponseSchema;
  },
  /**
   * Subscribes events from Pubsub
   *
   * @generated from rpc dapr.proto.runtime.v1.AppCallback.OnTopicEvent
   */
  onTopicEvent: {
    methodKind: "unary";
    input: typeof TopicEventRequestSchema;
    output: typeof TopicEventResponseSchema;
  },
  /**
   * Lists all input bindings subscribed by this app.
   *
   * @generated from rpc dapr.proto.runtime.v1.AppCallback.ListInputBindings
   */
  listInputBindings: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ListInputBindingsResponseSchema;
  },
  /**
   * Listens events from the input bindings
   *
   * User application can save the states or send the events to the output
   * bindings optionally by returning BindingEventResponse.
   *
   * @generated from rpc dapr.proto.runtime.v1.AppCallback.OnBindingEvent
   */
  onBindingEvent: {
    methodKind: "unary";
    input: typeof BindingEventRequestSchema;
    output: typeof BindingEventResponseSchema;
  },
}>;

/**
 * AppCallbackHealthCheck V1 is an optional extension to AppCallback V1 to implement
 * the HealthCheck method.
 *
 * @generated from service dapr.proto.runtime.v1.AppCallbackHealthCheck
 */
export declare const AppCallbackHealthCheck: GenService<{
  /**
   * Health check.
   *
   * @generated from rpc dapr.proto.runtime.v1.AppCallbackHealthCheck.HealthCheck
   */
  healthCheck: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof HealthCheckResponseSchema;
  },
}>;

/**
 * AppCallbackAlpha V1 is an optional extension to AppCallback V1 to opt
 * for Alpha RPCs.
 *
 * @generated from service dapr.proto.runtime.v1.AppCallbackAlpha
 */
export declare const AppCallbackAlpha: GenService<{
  /**
   * Subscribes bulk events from Pubsub
   *
   * @generated from rpc dapr.proto.runtime.v1.AppCallbackAlpha.OnBulkTopicEventAlpha1
   */
  onBulkTopicEventAlpha1: {
    methodKind: "unary";
    input: typeof TopicEventBulkRequestSchema;
    output: typeof TopicEventBulkResponseSchema;
  },
  /**
   * Sends job back to the app's endpoint at trigger time.
   *
   * @generated from rpc dapr.proto.runtime.v1.AppCallbackAlpha.OnJobEventAlpha1
   */
  onJobEventAlpha1: {
    methodKind: "unary";
    input: typeof JobEventRequestSchema;
    output: typeof JobEventResponseSchema;
  },
}>;

