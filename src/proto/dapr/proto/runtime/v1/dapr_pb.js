//
//Copyright 2021 The Dapr Authors
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//http://www.apache.org/licenses/LICENSE-2.0
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=none"
// @generated from file dapr/proto/runtime/v1/dapr.proto (package dapr.proto.runtime.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_any, file_google_protobuf_empty, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_dapr_proto_common_v1_common } from "../../common/v1/common_pb";
import { file_dapr_proto_runtime_v1_appcallback } from "./appcallback_pb";

/**
 * Describes the file dapr/proto/runtime/v1/dapr.proto.
 */
export const file_dapr_proto_runtime_v1_dapr = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_any, file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_protobuf_struct, file_dapr_proto_common_v1_common, file_dapr_proto_runtime_v1_appcallback]);

/**
 * Describes the message dapr.proto.runtime.v1.InvokeServiceRequest.
 * Use `create(InvokeServiceRequestSchema)` to create a new message.
 */
export const InvokeServiceRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 0);

/**
 * Describes the message dapr.proto.runtime.v1.GetStateRequest.
 * Use `create(GetStateRequestSchema)` to create a new message.
 */
export const GetStateRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 1);

/**
 * Describes the message dapr.proto.runtime.v1.GetBulkStateRequest.
 * Use `create(GetBulkStateRequestSchema)` to create a new message.
 */
export const GetBulkStateRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 2);

/**
 * Describes the message dapr.proto.runtime.v1.GetBulkStateResponse.
 * Use `create(GetBulkStateResponseSchema)` to create a new message.
 */
export const GetBulkStateResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 3);

/**
 * Describes the message dapr.proto.runtime.v1.BulkStateItem.
 * Use `create(BulkStateItemSchema)` to create a new message.
 */
export const BulkStateItemSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 4);

/**
 * Describes the message dapr.proto.runtime.v1.GetStateResponse.
 * Use `create(GetStateResponseSchema)` to create a new message.
 */
export const GetStateResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 5);

/**
 * Describes the message dapr.proto.runtime.v1.DeleteStateRequest.
 * Use `create(DeleteStateRequestSchema)` to create a new message.
 */
export const DeleteStateRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 6);

/**
 * Describes the message dapr.proto.runtime.v1.DeleteBulkStateRequest.
 * Use `create(DeleteBulkStateRequestSchema)` to create a new message.
 */
export const DeleteBulkStateRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 7);

/**
 * Describes the message dapr.proto.runtime.v1.SaveStateRequest.
 * Use `create(SaveStateRequestSchema)` to create a new message.
 */
export const SaveStateRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 8);

/**
 * Describes the message dapr.proto.runtime.v1.QueryStateRequest.
 * Use `create(QueryStateRequestSchema)` to create a new message.
 */
export const QueryStateRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 9);

/**
 * Describes the message dapr.proto.runtime.v1.QueryStateItem.
 * Use `create(QueryStateItemSchema)` to create a new message.
 */
export const QueryStateItemSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 10);

/**
 * Describes the message dapr.proto.runtime.v1.QueryStateResponse.
 * Use `create(QueryStateResponseSchema)` to create a new message.
 */
export const QueryStateResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 11);

/**
 * Describes the message dapr.proto.runtime.v1.PublishEventRequest.
 * Use `create(PublishEventRequestSchema)` to create a new message.
 */
export const PublishEventRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 12);

/**
 * Describes the message dapr.proto.runtime.v1.BulkPublishRequest.
 * Use `create(BulkPublishRequestSchema)` to create a new message.
 */
export const BulkPublishRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 13);

/**
 * Describes the message dapr.proto.runtime.v1.BulkPublishRequestEntry.
 * Use `create(BulkPublishRequestEntrySchema)` to create a new message.
 */
export const BulkPublishRequestEntrySchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 14);

/**
 * Describes the message dapr.proto.runtime.v1.BulkPublishResponse.
 * Use `create(BulkPublishResponseSchema)` to create a new message.
 */
export const BulkPublishResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 15);

/**
 * Describes the message dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.
 * Use `create(BulkPublishResponseFailedEntrySchema)` to create a new message.
 */
export const BulkPublishResponseFailedEntrySchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 16);

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1.
 * Use `create(SubscribeTopicEventsRequestAlpha1Schema)` to create a new message.
 */
export const SubscribeTopicEventsRequestAlpha1Schema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 17);

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.
 * Use `create(SubscribeTopicEventsRequestInitialAlpha1Schema)` to create a new message.
 */
export const SubscribeTopicEventsRequestInitialAlpha1Schema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 18);

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1.
 * Use `create(SubscribeTopicEventsRequestProcessedAlpha1Schema)` to create a new message.
 */
export const SubscribeTopicEventsRequestProcessedAlpha1Schema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 19);

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1.
 * Use `create(SubscribeTopicEventsResponseAlpha1Schema)` to create a new message.
 */
export const SubscribeTopicEventsResponseAlpha1Schema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 20);

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1.
 * Use `create(SubscribeTopicEventsResponseInitialAlpha1Schema)` to create a new message.
 */
export const SubscribeTopicEventsResponseInitialAlpha1Schema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 21);

/**
 * Describes the message dapr.proto.runtime.v1.InvokeBindingRequest.
 * Use `create(InvokeBindingRequestSchema)` to create a new message.
 */
export const InvokeBindingRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 22);

/**
 * Describes the message dapr.proto.runtime.v1.InvokeBindingResponse.
 * Use `create(InvokeBindingResponseSchema)` to create a new message.
 */
export const InvokeBindingResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 23);

/**
 * Describes the message dapr.proto.runtime.v1.GetSecretRequest.
 * Use `create(GetSecretRequestSchema)` to create a new message.
 */
export const GetSecretRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 24);

/**
 * Describes the message dapr.proto.runtime.v1.GetSecretResponse.
 * Use `create(GetSecretResponseSchema)` to create a new message.
 */
export const GetSecretResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 25);

/**
 * Describes the message dapr.proto.runtime.v1.GetBulkSecretRequest.
 * Use `create(GetBulkSecretRequestSchema)` to create a new message.
 */
export const GetBulkSecretRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 26);

/**
 * Describes the message dapr.proto.runtime.v1.SecretResponse.
 * Use `create(SecretResponseSchema)` to create a new message.
 */
export const SecretResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 27);

/**
 * Describes the message dapr.proto.runtime.v1.GetBulkSecretResponse.
 * Use `create(GetBulkSecretResponseSchema)` to create a new message.
 */
export const GetBulkSecretResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 28);

/**
 * Describes the message dapr.proto.runtime.v1.TransactionalStateOperation.
 * Use `create(TransactionalStateOperationSchema)` to create a new message.
 */
export const TransactionalStateOperationSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 29);

/**
 * Describes the message dapr.proto.runtime.v1.ExecuteStateTransactionRequest.
 * Use `create(ExecuteStateTransactionRequestSchema)` to create a new message.
 */
export const ExecuteStateTransactionRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 30);

/**
 * Describes the message dapr.proto.runtime.v1.RegisterActorTimerRequest.
 * Use `create(RegisterActorTimerRequestSchema)` to create a new message.
 */
export const RegisterActorTimerRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 31);

/**
 * Describes the message dapr.proto.runtime.v1.UnregisterActorTimerRequest.
 * Use `create(UnregisterActorTimerRequestSchema)` to create a new message.
 */
export const UnregisterActorTimerRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 32);

/**
 * Describes the message dapr.proto.runtime.v1.RegisterActorReminderRequest.
 * Use `create(RegisterActorReminderRequestSchema)` to create a new message.
 */
export const RegisterActorReminderRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 33);

/**
 * Describes the message dapr.proto.runtime.v1.UnregisterActorReminderRequest.
 * Use `create(UnregisterActorReminderRequestSchema)` to create a new message.
 */
export const UnregisterActorReminderRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 34);

/**
 * Describes the message dapr.proto.runtime.v1.GetActorStateRequest.
 * Use `create(GetActorStateRequestSchema)` to create a new message.
 */
export const GetActorStateRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 35);

/**
 * Describes the message dapr.proto.runtime.v1.GetActorStateResponse.
 * Use `create(GetActorStateResponseSchema)` to create a new message.
 */
export const GetActorStateResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 36);

/**
 * Describes the message dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.
 * Use `create(ExecuteActorStateTransactionRequestSchema)` to create a new message.
 */
export const ExecuteActorStateTransactionRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 37);

/**
 * Describes the message dapr.proto.runtime.v1.TransactionalActorStateOperation.
 * Use `create(TransactionalActorStateOperationSchema)` to create a new message.
 */
export const TransactionalActorStateOperationSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 38);

/**
 * Describes the message dapr.proto.runtime.v1.InvokeActorRequest.
 * Use `create(InvokeActorRequestSchema)` to create a new message.
 */
export const InvokeActorRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 39);

/**
 * Describes the message dapr.proto.runtime.v1.InvokeActorResponse.
 * Use `create(InvokeActorResponseSchema)` to create a new message.
 */
export const InvokeActorResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 40);

/**
 * Describes the message dapr.proto.runtime.v1.GetMetadataRequest.
 * Use `create(GetMetadataRequestSchema)` to create a new message.
 */
export const GetMetadataRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 41);

/**
 * Describes the message dapr.proto.runtime.v1.GetMetadataResponse.
 * Use `create(GetMetadataResponseSchema)` to create a new message.
 */
export const GetMetadataResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 42);

/**
 * Describes the message dapr.proto.runtime.v1.MetadataScheduler.
 * Use `create(MetadataSchedulerSchema)` to create a new message.
 */
export const MetadataSchedulerSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 43);

/**
 * Describes the message dapr.proto.runtime.v1.ActorRuntime.
 * Use `create(ActorRuntimeSchema)` to create a new message.
 */
export const ActorRuntimeSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 44);

/**
 * Describes the enum dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus.
 */
export const ActorRuntime_ActorRuntimeStatusSchema = /*@__PURE__*/
  enumDesc(file_dapr_proto_runtime_v1_dapr, 44, 0);

/**
 * @generated from enum dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus
 */
export const ActorRuntime_ActorRuntimeStatus = /*@__PURE__*/
  tsEnum(ActorRuntime_ActorRuntimeStatusSchema);

/**
 * Describes the message dapr.proto.runtime.v1.ActiveActorsCount.
 * Use `create(ActiveActorsCountSchema)` to create a new message.
 */
export const ActiveActorsCountSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 45);

/**
 * Describes the message dapr.proto.runtime.v1.RegisteredComponents.
 * Use `create(RegisteredComponentsSchema)` to create a new message.
 */
export const RegisteredComponentsSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 46);

/**
 * Describes the message dapr.proto.runtime.v1.MetadataHTTPEndpoint.
 * Use `create(MetadataHTTPEndpointSchema)` to create a new message.
 */
export const MetadataHTTPEndpointSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 47);

/**
 * Describes the message dapr.proto.runtime.v1.AppConnectionProperties.
 * Use `create(AppConnectionPropertiesSchema)` to create a new message.
 */
export const AppConnectionPropertiesSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 48);

/**
 * Describes the message dapr.proto.runtime.v1.AppConnectionHealthProperties.
 * Use `create(AppConnectionHealthPropertiesSchema)` to create a new message.
 */
export const AppConnectionHealthPropertiesSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 49);

/**
 * Describes the message dapr.proto.runtime.v1.PubsubSubscription.
 * Use `create(PubsubSubscriptionSchema)` to create a new message.
 */
export const PubsubSubscriptionSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 50);

/**
 * Describes the message dapr.proto.runtime.v1.PubsubSubscriptionRules.
 * Use `create(PubsubSubscriptionRulesSchema)` to create a new message.
 */
export const PubsubSubscriptionRulesSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 51);

/**
 * Describes the message dapr.proto.runtime.v1.PubsubSubscriptionRule.
 * Use `create(PubsubSubscriptionRuleSchema)` to create a new message.
 */
export const PubsubSubscriptionRuleSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 52);

/**
 * Describes the message dapr.proto.runtime.v1.SetMetadataRequest.
 * Use `create(SetMetadataRequestSchema)` to create a new message.
 */
export const SetMetadataRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 53);

/**
 * Describes the message dapr.proto.runtime.v1.GetConfigurationRequest.
 * Use `create(GetConfigurationRequestSchema)` to create a new message.
 */
export const GetConfigurationRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 54);

/**
 * Describes the message dapr.proto.runtime.v1.GetConfigurationResponse.
 * Use `create(GetConfigurationResponseSchema)` to create a new message.
 */
export const GetConfigurationResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 55);

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeConfigurationRequest.
 * Use `create(SubscribeConfigurationRequestSchema)` to create a new message.
 */
export const SubscribeConfigurationRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 56);

/**
 * Describes the message dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.
 * Use `create(UnsubscribeConfigurationRequestSchema)` to create a new message.
 */
export const UnsubscribeConfigurationRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 57);

/**
 * Describes the message dapr.proto.runtime.v1.SubscribeConfigurationResponse.
 * Use `create(SubscribeConfigurationResponseSchema)` to create a new message.
 */
export const SubscribeConfigurationResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 58);

/**
 * Describes the message dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.
 * Use `create(UnsubscribeConfigurationResponseSchema)` to create a new message.
 */
export const UnsubscribeConfigurationResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 59);

/**
 * Describes the message dapr.proto.runtime.v1.TryLockRequest.
 * Use `create(TryLockRequestSchema)` to create a new message.
 */
export const TryLockRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 60);

/**
 * Describes the message dapr.proto.runtime.v1.TryLockResponse.
 * Use `create(TryLockResponseSchema)` to create a new message.
 */
export const TryLockResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 61);

/**
 * Describes the message dapr.proto.runtime.v1.UnlockRequest.
 * Use `create(UnlockRequestSchema)` to create a new message.
 */
export const UnlockRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 62);

/**
 * Describes the message dapr.proto.runtime.v1.UnlockResponse.
 * Use `create(UnlockResponseSchema)` to create a new message.
 */
export const UnlockResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 63);

/**
 * Describes the enum dapr.proto.runtime.v1.UnlockResponse.Status.
 */
export const UnlockResponse_StatusSchema = /*@__PURE__*/
  enumDesc(file_dapr_proto_runtime_v1_dapr, 63, 0);

/**
 * @generated from enum dapr.proto.runtime.v1.UnlockResponse.Status
 */
export const UnlockResponse_Status = /*@__PURE__*/
  tsEnum(UnlockResponse_StatusSchema);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleGetKeyRequest.
 * Use `create(SubtleGetKeyRequestSchema)` to create a new message.
 */
export const SubtleGetKeyRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 64);

/**
 * Describes the enum dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat.
 */
export const SubtleGetKeyRequest_KeyFormatSchema = /*@__PURE__*/
  enumDesc(file_dapr_proto_runtime_v1_dapr, 64, 0);

/**
 * @generated from enum dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat
 */
export const SubtleGetKeyRequest_KeyFormat = /*@__PURE__*/
  tsEnum(SubtleGetKeyRequest_KeyFormatSchema);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleGetKeyResponse.
 * Use `create(SubtleGetKeyResponseSchema)` to create a new message.
 */
export const SubtleGetKeyResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 65);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleEncryptRequest.
 * Use `create(SubtleEncryptRequestSchema)` to create a new message.
 */
export const SubtleEncryptRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 66);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleEncryptResponse.
 * Use `create(SubtleEncryptResponseSchema)` to create a new message.
 */
export const SubtleEncryptResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 67);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleDecryptRequest.
 * Use `create(SubtleDecryptRequestSchema)` to create a new message.
 */
export const SubtleDecryptRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 68);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleDecryptResponse.
 * Use `create(SubtleDecryptResponseSchema)` to create a new message.
 */
export const SubtleDecryptResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 69);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleWrapKeyRequest.
 * Use `create(SubtleWrapKeyRequestSchema)` to create a new message.
 */
export const SubtleWrapKeyRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 70);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleWrapKeyResponse.
 * Use `create(SubtleWrapKeyResponseSchema)` to create a new message.
 */
export const SubtleWrapKeyResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 71);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.
 * Use `create(SubtleUnwrapKeyRequestSchema)` to create a new message.
 */
export const SubtleUnwrapKeyRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 72);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.
 * Use `create(SubtleUnwrapKeyResponseSchema)` to create a new message.
 */
export const SubtleUnwrapKeyResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 73);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleSignRequest.
 * Use `create(SubtleSignRequestSchema)` to create a new message.
 */
export const SubtleSignRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 74);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleSignResponse.
 * Use `create(SubtleSignResponseSchema)` to create a new message.
 */
export const SubtleSignResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 75);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleVerifyRequest.
 * Use `create(SubtleVerifyRequestSchema)` to create a new message.
 */
export const SubtleVerifyRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 76);

/**
 * Describes the message dapr.proto.runtime.v1.SubtleVerifyResponse.
 * Use `create(SubtleVerifyResponseSchema)` to create a new message.
 */
export const SubtleVerifyResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 77);

/**
 * Describes the message dapr.proto.runtime.v1.EncryptRequest.
 * Use `create(EncryptRequestSchema)` to create a new message.
 */
export const EncryptRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 78);

/**
 * Describes the message dapr.proto.runtime.v1.EncryptRequestOptions.
 * Use `create(EncryptRequestOptionsSchema)` to create a new message.
 */
export const EncryptRequestOptionsSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 79);

/**
 * Describes the message dapr.proto.runtime.v1.EncryptResponse.
 * Use `create(EncryptResponseSchema)` to create a new message.
 */
export const EncryptResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 80);

/**
 * Describes the message dapr.proto.runtime.v1.DecryptRequest.
 * Use `create(DecryptRequestSchema)` to create a new message.
 */
export const DecryptRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 81);

/**
 * Describes the message dapr.proto.runtime.v1.DecryptRequestOptions.
 * Use `create(DecryptRequestOptionsSchema)` to create a new message.
 */
export const DecryptRequestOptionsSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 82);

/**
 * Describes the message dapr.proto.runtime.v1.DecryptResponse.
 * Use `create(DecryptResponseSchema)` to create a new message.
 */
export const DecryptResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 83);

/**
 * Describes the message dapr.proto.runtime.v1.GetWorkflowRequest.
 * Use `create(GetWorkflowRequestSchema)` to create a new message.
 */
export const GetWorkflowRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 84);

/**
 * Describes the message dapr.proto.runtime.v1.GetWorkflowResponse.
 * Use `create(GetWorkflowResponseSchema)` to create a new message.
 */
export const GetWorkflowResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 85);

/**
 * Describes the message dapr.proto.runtime.v1.StartWorkflowRequest.
 * Use `create(StartWorkflowRequestSchema)` to create a new message.
 */
export const StartWorkflowRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 86);

/**
 * Describes the message dapr.proto.runtime.v1.StartWorkflowResponse.
 * Use `create(StartWorkflowResponseSchema)` to create a new message.
 */
export const StartWorkflowResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 87);

/**
 * Describes the message dapr.proto.runtime.v1.TerminateWorkflowRequest.
 * Use `create(TerminateWorkflowRequestSchema)` to create a new message.
 */
export const TerminateWorkflowRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 88);

/**
 * Describes the message dapr.proto.runtime.v1.PauseWorkflowRequest.
 * Use `create(PauseWorkflowRequestSchema)` to create a new message.
 */
export const PauseWorkflowRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 89);

/**
 * Describes the message dapr.proto.runtime.v1.ResumeWorkflowRequest.
 * Use `create(ResumeWorkflowRequestSchema)` to create a new message.
 */
export const ResumeWorkflowRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 90);

/**
 * Describes the message dapr.proto.runtime.v1.RaiseEventWorkflowRequest.
 * Use `create(RaiseEventWorkflowRequestSchema)` to create a new message.
 */
export const RaiseEventWorkflowRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 91);

/**
 * Describes the message dapr.proto.runtime.v1.PurgeWorkflowRequest.
 * Use `create(PurgeWorkflowRequestSchema)` to create a new message.
 */
export const PurgeWorkflowRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 92);

/**
 * Describes the message dapr.proto.runtime.v1.ShutdownRequest.
 * Use `create(ShutdownRequestSchema)` to create a new message.
 */
export const ShutdownRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 93);

/**
 * Describes the message dapr.proto.runtime.v1.Job.
 * Use `create(JobSchema)` to create a new message.
 */
export const JobSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 94);

/**
 * Describes the message dapr.proto.runtime.v1.ScheduleJobRequest.
 * Use `create(ScheduleJobRequestSchema)` to create a new message.
 */
export const ScheduleJobRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 95);

/**
 * Describes the message dapr.proto.runtime.v1.ScheduleJobResponse.
 * Use `create(ScheduleJobResponseSchema)` to create a new message.
 */
export const ScheduleJobResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 96);

/**
 * Describes the message dapr.proto.runtime.v1.GetJobRequest.
 * Use `create(GetJobRequestSchema)` to create a new message.
 */
export const GetJobRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 97);

/**
 * Describes the message dapr.proto.runtime.v1.GetJobResponse.
 * Use `create(GetJobResponseSchema)` to create a new message.
 */
export const GetJobResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 98);

/**
 * Describes the message dapr.proto.runtime.v1.DeleteJobRequest.
 * Use `create(DeleteJobRequestSchema)` to create a new message.
 */
export const DeleteJobRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 99);

/**
 * Describes the message dapr.proto.runtime.v1.DeleteJobResponse.
 * Use `create(DeleteJobResponseSchema)` to create a new message.
 */
export const DeleteJobResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 100);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationRequest.
 * Use `create(ConversationRequestSchema)` to create a new message.
 * @deprecated
 */
export const ConversationRequestSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 101);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationRequestAlpha2.
 * Use `create(ConversationRequestAlpha2Schema)` to create a new message.
 */
export const ConversationRequestAlpha2Schema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 102);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationInput.
 * Use `create(ConversationInputSchema)` to create a new message.
 * @deprecated
 */
export const ConversationInputSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 103);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationInputAlpha2.
 * Use `create(ConversationInputAlpha2Schema)` to create a new message.
 */
export const ConversationInputAlpha2Schema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 104);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessage.
 * Use `create(ConversationMessageSchema)` to create a new message.
 */
export const ConversationMessageSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 105);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfDeveloper.
 * Use `create(ConversationMessageOfDeveloperSchema)` to create a new message.
 */
export const ConversationMessageOfDeveloperSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 106);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfSystem.
 * Use `create(ConversationMessageOfSystemSchema)` to create a new message.
 */
export const ConversationMessageOfSystemSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 107);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfUser.
 * Use `create(ConversationMessageOfUserSchema)` to create a new message.
 */
export const ConversationMessageOfUserSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 108);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfAssistant.
 * Use `create(ConversationMessageOfAssistantSchema)` to create a new message.
 */
export const ConversationMessageOfAssistantSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 109);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageOfTool.
 * Use `create(ConversationMessageOfToolSchema)` to create a new message.
 */
export const ConversationMessageOfToolSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 110);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationToolCalls.
 * Use `create(ConversationToolCallsSchema)` to create a new message.
 */
export const ConversationToolCallsSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 111);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationToolCallsOfFunction.
 * Use `create(ConversationToolCallsOfFunctionSchema)` to create a new message.
 */
export const ConversationToolCallsOfFunctionSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 112);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationMessageContent.
 * Use `create(ConversationMessageContentSchema)` to create a new message.
 */
export const ConversationMessageContentSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 113);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResult.
 * Use `create(ConversationResultSchema)` to create a new message.
 * @deprecated
 */
export const ConversationResultSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 114);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResultAlpha2.
 * Use `create(ConversationResultAlpha2Schema)` to create a new message.
 */
export const ConversationResultAlpha2Schema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 115);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResultChoices.
 * Use `create(ConversationResultChoicesSchema)` to create a new message.
 */
export const ConversationResultChoicesSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 116);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResultMessage.
 * Use `create(ConversationResultMessageSchema)` to create a new message.
 */
export const ConversationResultMessageSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 117);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResponse.
 * Use `create(ConversationResponseSchema)` to create a new message.
 * @deprecated
 */
export const ConversationResponseSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 118);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationResponseAlpha2.
 * Use `create(ConversationResponseAlpha2Schema)` to create a new message.
 */
export const ConversationResponseAlpha2Schema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 119);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationTools.
 * Use `create(ConversationToolsSchema)` to create a new message.
 */
export const ConversationToolsSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 120);

/**
 * Describes the message dapr.proto.runtime.v1.ConversationToolsFunction.
 * Use `create(ConversationToolsFunctionSchema)` to create a new message.
 */
export const ConversationToolsFunctionSchema = /*@__PURE__*/
  messageDesc(file_dapr_proto_runtime_v1_dapr, 121);

/**
 * Describes the enum dapr.proto.runtime.v1.PubsubSubscriptionType.
 */
export const PubsubSubscriptionTypeSchema = /*@__PURE__*/
  enumDesc(file_dapr_proto_runtime_v1_dapr, 0);

/**
 * PubsubSubscriptionType indicates the type of subscription
 *
 * @generated from enum dapr.proto.runtime.v1.PubsubSubscriptionType
 */
export const PubsubSubscriptionType = /*@__PURE__*/
  tsEnum(PubsubSubscriptionTypeSchema);

/**
 * Dapr service provides APIs to user application to access Dapr building blocks.
 *
 * @generated from service dapr.proto.runtime.v1.Dapr
 */
export const Dapr = /*@__PURE__*/
  serviceDesc(file_dapr_proto_runtime_v1_dapr, 0);

