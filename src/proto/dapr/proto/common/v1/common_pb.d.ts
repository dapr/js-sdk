//
//Copyright 2021 The Dapr Authors
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//http://www.apache.org/licenses/LICENSE-2.0
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=none"
// @generated from file dapr/proto/common/v1/common.proto (package dapr.proto.common.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Any, Duration } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file dapr/proto/common/v1/common.proto.
 */
export declare const file_dapr_proto_common_v1_common: GenFile;

/**
 * HTTPExtension includes HTTP verb and querystring
 * when Dapr runtime delivers HTTP content.
 *
 * For example, when callers calls http invoke api
 * `POST http://localhost:3500/v1.0/invoke/<app_id>/method/<method>?query1=value1&query2=value2`
 *
 * Dapr runtime will parse POST as a verb and extract querystring to quersytring map.
 *
 * @generated from message dapr.proto.common.v1.HTTPExtension
 */
export declare type HTTPExtension = Message<"dapr.proto.common.v1.HTTPExtension"> & {
  /**
   * Required. HTTP verb.
   *
   * @generated from field: dapr.proto.common.v1.HTTPExtension.Verb verb = 1;
   */
  verb: HTTPExtension_Verb;

  /**
   * Optional. querystring represents an encoded HTTP url query string in the following format: name=value&name2=value2
   *
   * @generated from field: string querystring = 2;
   */
  querystring: string;
};

/**
 * Describes the message dapr.proto.common.v1.HTTPExtension.
 * Use `create(HTTPExtensionSchema)` to create a new message.
 */
export declare const HTTPExtensionSchema: GenMessage<HTTPExtension>;

/**
 * Type of HTTP 1.1 Methods
 * RFC 7231: https://tools.ietf.org/html/rfc7231#page-24
 * RFC 5789: https://datatracker.ietf.org/doc/html/rfc5789
 *
 * @generated from enum dapr.proto.common.v1.HTTPExtension.Verb
 */
export enum HTTPExtension_Verb {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: GET = 1;
   */
  GET = 1,

  /**
   * @generated from enum value: HEAD = 2;
   */
  HEAD = 2,

  /**
   * @generated from enum value: POST = 3;
   */
  POST = 3,

  /**
   * @generated from enum value: PUT = 4;
   */
  PUT = 4,

  /**
   * @generated from enum value: DELETE = 5;
   */
  DELETE = 5,

  /**
   * @generated from enum value: CONNECT = 6;
   */
  CONNECT = 6,

  /**
   * @generated from enum value: OPTIONS = 7;
   */
  OPTIONS = 7,

  /**
   * @generated from enum value: TRACE = 8;
   */
  TRACE = 8,

  /**
   * @generated from enum value: PATCH = 9;
   */
  PATCH = 9,
}

/**
 * Describes the enum dapr.proto.common.v1.HTTPExtension.Verb.
 */
export declare const HTTPExtension_VerbSchema: GenEnum<HTTPExtension_Verb>;

/**
 * InvokeRequest is the message to invoke a method with the data.
 * This message is used in InvokeService of Dapr gRPC Service and OnInvoke
 * of AppCallback gRPC service.
 *
 * @generated from message dapr.proto.common.v1.InvokeRequest
 */
export declare type InvokeRequest = Message<"dapr.proto.common.v1.InvokeRequest"> & {
  /**
   * Required. method is a method name which will be invoked by caller.
   *
   * @generated from field: string method = 1;
   */
  method: string;

  /**
   * Required in unary RPCs. Bytes value or Protobuf message which caller sent.
   * Dapr treats Any.value as bytes type if Any.type_url is unset.
   *
   * @generated from field: google.protobuf.Any data = 2;
   */
  data?: Any;

  /**
   * The type of data content.
   *
   * This field is required if data delivers http request body
   * Otherwise, this is optional.
   *
   * @generated from field: string content_type = 3;
   */
  contentType: string;

  /**
   * HTTP specific fields if request conveys http-compatible request.
   *
   * This field is required for http-compatible request. Otherwise,
   * this field is optional.
   *
   * @generated from field: dapr.proto.common.v1.HTTPExtension http_extension = 4;
   */
  httpExtension?: HTTPExtension;
};

/**
 * Describes the message dapr.proto.common.v1.InvokeRequest.
 * Use `create(InvokeRequestSchema)` to create a new message.
 */
export declare const InvokeRequestSchema: GenMessage<InvokeRequest>;

/**
 * InvokeResponse is the response message including data and its content type
 * from app callback.
 * This message is used in InvokeService of Dapr gRPC Service and OnInvoke
 * of AppCallback gRPC service.
 *
 * @generated from message dapr.proto.common.v1.InvokeResponse
 */
export declare type InvokeResponse = Message<"dapr.proto.common.v1.InvokeResponse"> & {
  /**
   * Required in unary RPCs. The content body of InvokeService response.
   *
   * @generated from field: google.protobuf.Any data = 1;
   */
  data?: Any;

  /**
   * Required. The type of data content.
   *
   * @generated from field: string content_type = 2;
   */
  contentType: string;
};

/**
 * Describes the message dapr.proto.common.v1.InvokeResponse.
 * Use `create(InvokeResponseSchema)` to create a new message.
 */
export declare const InvokeResponseSchema: GenMessage<InvokeResponse>;

/**
 * Chunk of data sent in a streaming request or response.
 * This is used in requests including InternalInvokeRequestStream.
 *
 * @generated from message dapr.proto.common.v1.StreamPayload
 */
export declare type StreamPayload = Message<"dapr.proto.common.v1.StreamPayload"> & {
  /**
   * Data sent in the chunk.
   * The amount of data included in each chunk is up to the discretion of the sender, and can be empty.
   * Additionally, the amount of data doesn't need to be fixed and subsequent messages can send more, or less, data.
   * Receivers must not make assumptions about the number of bytes they'll receive in each chunk.
   *
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * Sequence number. This is a counter that starts from 0 and increments by 1 on each chunk sent.
   *
   * @generated from field: uint64 seq = 2;
   */
  seq: bigint;
};

/**
 * Describes the message dapr.proto.common.v1.StreamPayload.
 * Use `create(StreamPayloadSchema)` to create a new message.
 */
export declare const StreamPayloadSchema: GenMessage<StreamPayload>;

/**
 * StateItem represents state key, value, and additional options to save state.
 *
 * @generated from message dapr.proto.common.v1.StateItem
 */
export declare type StateItem = Message<"dapr.proto.common.v1.StateItem"> & {
  /**
   * Required. The state key
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Required. The state data for key
   *
   * @generated from field: bytes value = 2;
   */
  value: Uint8Array;

  /**
   * The entity tag which represents the specific version of data.
   * The exact ETag format is defined by the corresponding data store.
   *
   * @generated from field: dapr.proto.common.v1.Etag etag = 3;
   */
  etag?: Etag;

  /**
   * The metadata which will be passed to state store component.
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };

  /**
   * Options for concurrency and consistency to save the state.
   *
   * @generated from field: dapr.proto.common.v1.StateOptions options = 5;
   */
  options?: StateOptions;
};

/**
 * Describes the message dapr.proto.common.v1.StateItem.
 * Use `create(StateItemSchema)` to create a new message.
 */
export declare const StateItemSchema: GenMessage<StateItem>;

/**
 * Etag represents a state item version
 *
 * @generated from message dapr.proto.common.v1.Etag
 */
export declare type Etag = Message<"dapr.proto.common.v1.Etag"> & {
  /**
   * value sets the etag value
   *
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message dapr.proto.common.v1.Etag.
 * Use `create(EtagSchema)` to create a new message.
 */
export declare const EtagSchema: GenMessage<Etag>;

/**
 * StateOptions configures concurrency and consistency for state operations
 *
 * @generated from message dapr.proto.common.v1.StateOptions
 */
export declare type StateOptions = Message<"dapr.proto.common.v1.StateOptions"> & {
  /**
   * @generated from field: dapr.proto.common.v1.StateOptions.StateConcurrency concurrency = 1;
   */
  concurrency: StateOptions_StateConcurrency;

  /**
   * @generated from field: dapr.proto.common.v1.StateOptions.StateConsistency consistency = 2;
   */
  consistency: StateOptions_StateConsistency;
};

/**
 * Describes the message dapr.proto.common.v1.StateOptions.
 * Use `create(StateOptionsSchema)` to create a new message.
 */
export declare const StateOptionsSchema: GenMessage<StateOptions>;

/**
 * Enum describing the supported concurrency for state.
 *
 * @generated from enum dapr.proto.common.v1.StateOptions.StateConcurrency
 */
export enum StateOptions_StateConcurrency {
  /**
   * @generated from enum value: CONCURRENCY_UNSPECIFIED = 0;
   */
  CONCURRENCY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONCURRENCY_FIRST_WRITE = 1;
   */
  CONCURRENCY_FIRST_WRITE = 1,

  /**
   * @generated from enum value: CONCURRENCY_LAST_WRITE = 2;
   */
  CONCURRENCY_LAST_WRITE = 2,
}

/**
 * Describes the enum dapr.proto.common.v1.StateOptions.StateConcurrency.
 */
export declare const StateOptions_StateConcurrencySchema: GenEnum<StateOptions_StateConcurrency>;

/**
 * Enum describing the supported consistency for state.
 *
 * @generated from enum dapr.proto.common.v1.StateOptions.StateConsistency
 */
export enum StateOptions_StateConsistency {
  /**
   * @generated from enum value: CONSISTENCY_UNSPECIFIED = 0;
   */
  CONSISTENCY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONSISTENCY_EVENTUAL = 1;
   */
  CONSISTENCY_EVENTUAL = 1,

  /**
   * @generated from enum value: CONSISTENCY_STRONG = 2;
   */
  CONSISTENCY_STRONG = 2,
}

/**
 * Describes the enum dapr.proto.common.v1.StateOptions.StateConsistency.
 */
export declare const StateOptions_StateConsistencySchema: GenEnum<StateOptions_StateConsistency>;

/**
 * ConfigurationItem represents all the configuration with its name(key).
 *
 * @generated from message dapr.proto.common.v1.ConfigurationItem
 */
export declare type ConfigurationItem = Message<"dapr.proto.common.v1.ConfigurationItem"> & {
  /**
   * Required. The value of configuration item.
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * Version is response only and cannot be fetched. Store is not expected to keep all versions available
   *
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * the metadata which will be passed to/from configuration store component.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dapr.proto.common.v1.ConfigurationItem.
 * Use `create(ConfigurationItemSchema)` to create a new message.
 */
export declare const ConfigurationItemSchema: GenMessage<ConfigurationItem>;

/**
 * JobFailurePolicy defines the policy to apply when a job fails to trigger.
 *
 * @generated from message dapr.proto.common.v1.JobFailurePolicy
 */
export declare type JobFailurePolicy = Message<"dapr.proto.common.v1.JobFailurePolicy"> & {
  /**
   * policy is the policy to apply when a job fails to trigger.
   *
   * @generated from oneof dapr.proto.common.v1.JobFailurePolicy.policy
   */
  policy: {
    /**
     * @generated from field: dapr.proto.common.v1.JobFailurePolicyDrop drop = 1;
     */
    value: JobFailurePolicyDrop;
    case: "drop";
  } | {
    /**
     * @generated from field: dapr.proto.common.v1.JobFailurePolicyConstant constant = 2;
     */
    value: JobFailurePolicyConstant;
    case: "constant";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dapr.proto.common.v1.JobFailurePolicy.
 * Use `create(JobFailurePolicySchema)` to create a new message.
 */
export declare const JobFailurePolicySchema: GenMessage<JobFailurePolicy>;

/**
 * JobFailurePolicyDrop is a policy which drops the job tick when the job fails to trigger.
 *
 * @generated from message dapr.proto.common.v1.JobFailurePolicyDrop
 */
export declare type JobFailurePolicyDrop = Message<"dapr.proto.common.v1.JobFailurePolicyDrop"> & {
};

/**
 * Describes the message dapr.proto.common.v1.JobFailurePolicyDrop.
 * Use `create(JobFailurePolicyDropSchema)` to create a new message.
 */
export declare const JobFailurePolicyDropSchema: GenMessage<JobFailurePolicyDrop>;

/**
 * JobFailurePolicyConstant is a policy which retries the job at a consistent interval when the job fails to trigger.
 *
 * @generated from message dapr.proto.common.v1.JobFailurePolicyConstant
 */
export declare type JobFailurePolicyConstant = Message<"dapr.proto.common.v1.JobFailurePolicyConstant"> & {
  /**
   * interval is the constant delay to wait before retrying the job.
   *
   * @generated from field: google.protobuf.Duration interval = 1;
   */
  interval?: Duration;

  /**
   * max_retries is the optional maximum number of retries to attempt before giving up.
   * If unset, the Job will be retried indefinitely.
   *
   * @generated from field: optional uint32 max_retries = 2;
   */
  maxRetries?: number;
};

/**
 * Describes the message dapr.proto.common.v1.JobFailurePolicyConstant.
 * Use `create(JobFailurePolicyConstantSchema)` to create a new message.
 */
export declare const JobFailurePolicyConstantSchema: GenMessage<JobFailurePolicyConstant>;

