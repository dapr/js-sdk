// source: dapr/proto/common/v1/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.dapr.proto.common.v1.ConfigurationItem', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.Etag', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.HTTPExtension', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.HTTPExtension.Verb', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.InvokeRequest', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.InvokeResponse', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.JobFailurePolicy', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.JobFailurePolicy.PolicyCase', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.JobFailurePolicyConstant', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.JobFailurePolicyDrop', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.StateItem', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.StateOptions', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.StateOptions.StateConcurrency', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.StateOptions.StateConsistency', null, global);
goog.exportSymbol('proto.dapr.proto.common.v1.StreamPayload', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.HTTPExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.HTTPExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.HTTPExtension.displayName = 'proto.dapr.proto.common.v1.HTTPExtension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.InvokeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.InvokeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.InvokeRequest.displayName = 'proto.dapr.proto.common.v1.InvokeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.InvokeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.InvokeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.InvokeResponse.displayName = 'proto.dapr.proto.common.v1.InvokeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.StreamPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.StreamPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.StreamPayload.displayName = 'proto.dapr.proto.common.v1.StreamPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.StateItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.StateItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.StateItem.displayName = 'proto.dapr.proto.common.v1.StateItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.Etag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.Etag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.Etag.displayName = 'proto.dapr.proto.common.v1.Etag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.StateOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.StateOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.StateOptions.displayName = 'proto.dapr.proto.common.v1.StateOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.ConfigurationItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.ConfigurationItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.ConfigurationItem.displayName = 'proto.dapr.proto.common.v1.ConfigurationItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.JobFailurePolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dapr.proto.common.v1.JobFailurePolicy.oneofGroups_);
};
goog.inherits(proto.dapr.proto.common.v1.JobFailurePolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.JobFailurePolicy.displayName = 'proto.dapr.proto.common.v1.JobFailurePolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.JobFailurePolicyDrop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.JobFailurePolicyDrop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.JobFailurePolicyDrop.displayName = 'proto.dapr.proto.common.v1.JobFailurePolicyDrop';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dapr.proto.common.v1.JobFailurePolicyConstant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dapr.proto.common.v1.JobFailurePolicyConstant.displayName = 'proto.dapr.proto.common.v1.JobFailurePolicyConstant';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.HTTPExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.HTTPExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.HTTPExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.HTTPExtension.toObject = function(includeInstance, msg) {
  var f, obj = {
    verb: jspb.Message.getFieldWithDefault(msg, 1, 0),
    querystring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.HTTPExtension}
 */
proto.dapr.proto.common.v1.HTTPExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.HTTPExtension;
  return proto.dapr.proto.common.v1.HTTPExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.HTTPExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.HTTPExtension}
 */
proto.dapr.proto.common.v1.HTTPExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.dapr.proto.common.v1.HTTPExtension.Verb} */ (reader.readEnum());
      msg.setVerb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuerystring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.HTTPExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.HTTPExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.HTTPExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.HTTPExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerb();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getQuerystring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.dapr.proto.common.v1.HTTPExtension.Verb = {
  NONE: 0,
  GET: 1,
  HEAD: 2,
  POST: 3,
  PUT: 4,
  DELETE: 5,
  CONNECT: 6,
  OPTIONS: 7,
  TRACE: 8,
  PATCH: 9
};

/**
 * optional Verb verb = 1;
 * @return {!proto.dapr.proto.common.v1.HTTPExtension.Verb}
 */
proto.dapr.proto.common.v1.HTTPExtension.prototype.getVerb = function() {
  return /** @type {!proto.dapr.proto.common.v1.HTTPExtension.Verb} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.dapr.proto.common.v1.HTTPExtension.Verb} value
 * @return {!proto.dapr.proto.common.v1.HTTPExtension} returns this
 */
proto.dapr.proto.common.v1.HTTPExtension.prototype.setVerb = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string querystring = 2;
 * @return {string}
 */
proto.dapr.proto.common.v1.HTTPExtension.prototype.getQuerystring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dapr.proto.common.v1.HTTPExtension} returns this
 */
proto.dapr.proto.common.v1.HTTPExtension.prototype.setQuerystring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.InvokeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.InvokeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.InvokeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    contentType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    httpExtension: (f = msg.getHttpExtension()) && proto.dapr.proto.common.v1.HTTPExtension.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.InvokeRequest}
 */
proto.dapr.proto.common.v1.InvokeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.InvokeRequest;
  return proto.dapr.proto.common.v1.InvokeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.InvokeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.InvokeRequest}
 */
proto.dapr.proto.common.v1.InvokeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContentType(value);
      break;
    case 4:
      var value = new proto.dapr.proto.common.v1.HTTPExtension;
      reader.readMessage(value,proto.dapr.proto.common.v1.HTTPExtension.deserializeBinaryFromReader);
      msg.setHttpExtension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.InvokeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.InvokeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.InvokeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getContentType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHttpExtension();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.dapr.proto.common.v1.HTTPExtension.serializeBinaryToWriter
    );
  }
};


/**
 * optional string method = 1;
 * @return {string}
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dapr.proto.common.v1.InvokeRequest} returns this
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.setMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any data = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.dapr.proto.common.v1.InvokeRequest} returns this
*/
proto.dapr.proto.common.v1.InvokeRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dapr.proto.common.v1.InvokeRequest} returns this
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string content_type = 3;
 * @return {string}
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.getContentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dapr.proto.common.v1.InvokeRequest} returns this
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.setContentType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional HTTPExtension http_extension = 4;
 * @return {?proto.dapr.proto.common.v1.HTTPExtension}
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.getHttpExtension = function() {
  return /** @type{?proto.dapr.proto.common.v1.HTTPExtension} */ (
    jspb.Message.getWrapperField(this, proto.dapr.proto.common.v1.HTTPExtension, 4));
};


/**
 * @param {?proto.dapr.proto.common.v1.HTTPExtension|undefined} value
 * @return {!proto.dapr.proto.common.v1.InvokeRequest} returns this
*/
proto.dapr.proto.common.v1.InvokeRequest.prototype.setHttpExtension = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dapr.proto.common.v1.InvokeRequest} returns this
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.clearHttpExtension = function() {
  return this.setHttpExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dapr.proto.common.v1.InvokeRequest.prototype.hasHttpExtension = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.InvokeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.InvokeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.InvokeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.InvokeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    contentType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.InvokeResponse}
 */
proto.dapr.proto.common.v1.InvokeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.InvokeResponse;
  return proto.dapr.proto.common.v1.InvokeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.InvokeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.InvokeResponse}
 */
proto.dapr.proto.common.v1.InvokeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContentType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.InvokeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.InvokeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.InvokeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.InvokeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getContentType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Any data = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.dapr.proto.common.v1.InvokeResponse.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.dapr.proto.common.v1.InvokeResponse} returns this
*/
proto.dapr.proto.common.v1.InvokeResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dapr.proto.common.v1.InvokeResponse} returns this
 */
proto.dapr.proto.common.v1.InvokeResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dapr.proto.common.v1.InvokeResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string content_type = 2;
 * @return {string}
 */
proto.dapr.proto.common.v1.InvokeResponse.prototype.getContentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dapr.proto.common.v1.InvokeResponse} returns this
 */
proto.dapr.proto.common.v1.InvokeResponse.prototype.setContentType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.StreamPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.StreamPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.StreamPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.StreamPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    seq: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.StreamPayload}
 */
proto.dapr.proto.common.v1.StreamPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.StreamPayload;
  return proto.dapr.proto.common.v1.StreamPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.StreamPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.StreamPayload}
 */
proto.dapr.proto.common.v1.StreamPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.StreamPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.StreamPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.StreamPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.StreamPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSeq();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dapr.proto.common.v1.StreamPayload.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.dapr.proto.common.v1.StreamPayload.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.StreamPayload.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.dapr.proto.common.v1.StreamPayload} returns this
 */
proto.dapr.proto.common.v1.StreamPayload.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 seq = 2;
 * @return {number}
 */
proto.dapr.proto.common.v1.StreamPayload.prototype.getSeq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dapr.proto.common.v1.StreamPayload} returns this
 */
proto.dapr.proto.common.v1.StreamPayload.prototype.setSeq = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.StateItem.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.StateItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.StateItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.StateItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: msg.getValue_asB64(),
    etag: (f = msg.getEtag()) && proto.dapr.proto.common.v1.Etag.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    options: (f = msg.getOptions()) && proto.dapr.proto.common.v1.StateOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.StateItem}
 */
proto.dapr.proto.common.v1.StateItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.StateItem;
  return proto.dapr.proto.common.v1.StateItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.StateItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.StateItem}
 */
proto.dapr.proto.common.v1.StateItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    case 3:
      var value = new proto.dapr.proto.common.v1.Etag;
      reader.readMessage(value,proto.dapr.proto.common.v1.Etag.deserializeBinaryFromReader);
      msg.setEtag(value);
      break;
    case 4:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = new proto.dapr.proto.common.v1.StateOptions;
      reader.readMessage(value,proto.dapr.proto.common.v1.StateOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.StateItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.StateItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.StateItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.StateItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getEtag();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.dapr.proto.common.v1.Etag.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.dapr.proto.common.v1.StateOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.dapr.proto.common.v1.StateItem.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dapr.proto.common.v1.StateItem} returns this
 */
proto.dapr.proto.common.v1.StateItem.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes value = 2;
 * @return {!(string|Uint8Array)}
 */
proto.dapr.proto.common.v1.StateItem.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes value = 2;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.dapr.proto.common.v1.StateItem.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.StateItem.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.dapr.proto.common.v1.StateItem} returns this
 */
proto.dapr.proto.common.v1.StateItem.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional Etag etag = 3;
 * @return {?proto.dapr.proto.common.v1.Etag}
 */
proto.dapr.proto.common.v1.StateItem.prototype.getEtag = function() {
  return /** @type{?proto.dapr.proto.common.v1.Etag} */ (
    jspb.Message.getWrapperField(this, proto.dapr.proto.common.v1.Etag, 3));
};


/**
 * @param {?proto.dapr.proto.common.v1.Etag|undefined} value
 * @return {!proto.dapr.proto.common.v1.StateItem} returns this
*/
proto.dapr.proto.common.v1.StateItem.prototype.setEtag = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dapr.proto.common.v1.StateItem} returns this
 */
proto.dapr.proto.common.v1.StateItem.prototype.clearEtag = function() {
  return this.setEtag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dapr.proto.common.v1.StateItem.prototype.hasEtag = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.dapr.proto.common.v1.StateItem.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.dapr.proto.common.v1.StateItem} returns this
 */
proto.dapr.proto.common.v1.StateItem.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional StateOptions options = 5;
 * @return {?proto.dapr.proto.common.v1.StateOptions}
 */
proto.dapr.proto.common.v1.StateItem.prototype.getOptions = function() {
  return /** @type{?proto.dapr.proto.common.v1.StateOptions} */ (
    jspb.Message.getWrapperField(this, proto.dapr.proto.common.v1.StateOptions, 5));
};


/**
 * @param {?proto.dapr.proto.common.v1.StateOptions|undefined} value
 * @return {!proto.dapr.proto.common.v1.StateItem} returns this
*/
proto.dapr.proto.common.v1.StateItem.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dapr.proto.common.v1.StateItem} returns this
 */
proto.dapr.proto.common.v1.StateItem.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dapr.proto.common.v1.StateItem.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.Etag.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.Etag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.Etag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.Etag.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.Etag}
 */
proto.dapr.proto.common.v1.Etag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.Etag;
  return proto.dapr.proto.common.v1.Etag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.Etag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.Etag}
 */
proto.dapr.proto.common.v1.Etag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.Etag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.Etag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.Etag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.Etag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.dapr.proto.common.v1.Etag.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dapr.proto.common.v1.Etag} returns this
 */
proto.dapr.proto.common.v1.Etag.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.StateOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.StateOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.StateOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.StateOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    concurrency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    consistency: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.StateOptions}
 */
proto.dapr.proto.common.v1.StateOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.StateOptions;
  return proto.dapr.proto.common.v1.StateOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.StateOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.StateOptions}
 */
proto.dapr.proto.common.v1.StateOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.dapr.proto.common.v1.StateOptions.StateConcurrency} */ (reader.readEnum());
      msg.setConcurrency(value);
      break;
    case 2:
      var value = /** @type {!proto.dapr.proto.common.v1.StateOptions.StateConsistency} */ (reader.readEnum());
      msg.setConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.StateOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.StateOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.StateOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.StateOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConcurrency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConsistency();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.dapr.proto.common.v1.StateOptions.StateConcurrency = {
  CONCURRENCY_UNSPECIFIED: 0,
  CONCURRENCY_FIRST_WRITE: 1,
  CONCURRENCY_LAST_WRITE: 2
};

/**
 * @enum {number}
 */
proto.dapr.proto.common.v1.StateOptions.StateConsistency = {
  CONSISTENCY_UNSPECIFIED: 0,
  CONSISTENCY_EVENTUAL: 1,
  CONSISTENCY_STRONG: 2
};

/**
 * optional StateConcurrency concurrency = 1;
 * @return {!proto.dapr.proto.common.v1.StateOptions.StateConcurrency}
 */
proto.dapr.proto.common.v1.StateOptions.prototype.getConcurrency = function() {
  return /** @type {!proto.dapr.proto.common.v1.StateOptions.StateConcurrency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.dapr.proto.common.v1.StateOptions.StateConcurrency} value
 * @return {!proto.dapr.proto.common.v1.StateOptions} returns this
 */
proto.dapr.proto.common.v1.StateOptions.prototype.setConcurrency = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional StateConsistency consistency = 2;
 * @return {!proto.dapr.proto.common.v1.StateOptions.StateConsistency}
 */
proto.dapr.proto.common.v1.StateOptions.prototype.getConsistency = function() {
  return /** @type {!proto.dapr.proto.common.v1.StateOptions.StateConsistency} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.dapr.proto.common.v1.StateOptions.StateConsistency} value
 * @return {!proto.dapr.proto.common.v1.StateOptions} returns this
 */
proto.dapr.proto.common.v1.StateOptions.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.ConfigurationItem.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.ConfigurationItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.ConfigurationItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.ConfigurationItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.ConfigurationItem}
 */
proto.dapr.proto.common.v1.ConfigurationItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.ConfigurationItem;
  return proto.dapr.proto.common.v1.ConfigurationItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.ConfigurationItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.ConfigurationItem}
 */
proto.dapr.proto.common.v1.ConfigurationItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.ConfigurationItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.ConfigurationItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.ConfigurationItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.ConfigurationItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.dapr.proto.common.v1.ConfigurationItem.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dapr.proto.common.v1.ConfigurationItem} returns this
 */
proto.dapr.proto.common.v1.ConfigurationItem.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.dapr.proto.common.v1.ConfigurationItem.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dapr.proto.common.v1.ConfigurationItem} returns this
 */
proto.dapr.proto.common.v1.ConfigurationItem.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> metadata = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.dapr.proto.common.v1.ConfigurationItem.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.dapr.proto.common.v1.ConfigurationItem} returns this
 */
proto.dapr.proto.common.v1.ConfigurationItem.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dapr.proto.common.v1.JobFailurePolicy.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.PolicyCase = {
  POLICY_NOT_SET: 0,
  DROP: 1,
  CONSTANT: 2
};

/**
 * @return {proto.dapr.proto.common.v1.JobFailurePolicy.PolicyCase}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.getPolicyCase = function() {
  return /** @type {proto.dapr.proto.common.v1.JobFailurePolicy.PolicyCase} */(jspb.Message.computeOneofCase(this, proto.dapr.proto.common.v1.JobFailurePolicy.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.JobFailurePolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.JobFailurePolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.JobFailurePolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    drop: (f = msg.getDrop()) && proto.dapr.proto.common.v1.JobFailurePolicyDrop.toObject(includeInstance, f),
    constant: (f = msg.getConstant()) && proto.dapr.proto.common.v1.JobFailurePolicyConstant.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicy}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.JobFailurePolicy;
  return proto.dapr.proto.common.v1.JobFailurePolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.JobFailurePolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicy}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dapr.proto.common.v1.JobFailurePolicyDrop;
      reader.readMessage(value,proto.dapr.proto.common.v1.JobFailurePolicyDrop.deserializeBinaryFromReader);
      msg.setDrop(value);
      break;
    case 2:
      var value = new proto.dapr.proto.common.v1.JobFailurePolicyConstant;
      reader.readMessage(value,proto.dapr.proto.common.v1.JobFailurePolicyConstant.deserializeBinaryFromReader);
      msg.setConstant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.JobFailurePolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.JobFailurePolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.JobFailurePolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDrop();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dapr.proto.common.v1.JobFailurePolicyDrop.serializeBinaryToWriter
    );
  }
  f = message.getConstant();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.dapr.proto.common.v1.JobFailurePolicyConstant.serializeBinaryToWriter
    );
  }
};


/**
 * optional JobFailurePolicyDrop drop = 1;
 * @return {?proto.dapr.proto.common.v1.JobFailurePolicyDrop}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.getDrop = function() {
  return /** @type{?proto.dapr.proto.common.v1.JobFailurePolicyDrop} */ (
    jspb.Message.getWrapperField(this, proto.dapr.proto.common.v1.JobFailurePolicyDrop, 1));
};


/**
 * @param {?proto.dapr.proto.common.v1.JobFailurePolicyDrop|undefined} value
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicy} returns this
*/
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.setDrop = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.dapr.proto.common.v1.JobFailurePolicy.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicy} returns this
 */
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.clearDrop = function() {
  return this.setDrop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.hasDrop = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional JobFailurePolicyConstant constant = 2;
 * @return {?proto.dapr.proto.common.v1.JobFailurePolicyConstant}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.getConstant = function() {
  return /** @type{?proto.dapr.proto.common.v1.JobFailurePolicyConstant} */ (
    jspb.Message.getWrapperField(this, proto.dapr.proto.common.v1.JobFailurePolicyConstant, 2));
};


/**
 * @param {?proto.dapr.proto.common.v1.JobFailurePolicyConstant|undefined} value
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicy} returns this
*/
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.setConstant = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.dapr.proto.common.v1.JobFailurePolicy.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicy} returns this
 */
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.clearConstant = function() {
  return this.setConstant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dapr.proto.common.v1.JobFailurePolicy.prototype.hasConstant = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.JobFailurePolicyDrop.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.JobFailurePolicyDrop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.JobFailurePolicyDrop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.JobFailurePolicyDrop.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicyDrop}
 */
proto.dapr.proto.common.v1.JobFailurePolicyDrop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.JobFailurePolicyDrop;
  return proto.dapr.proto.common.v1.JobFailurePolicyDrop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.JobFailurePolicyDrop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicyDrop}
 */
proto.dapr.proto.common.v1.JobFailurePolicyDrop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.JobFailurePolicyDrop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.JobFailurePolicyDrop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.JobFailurePolicyDrop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.JobFailurePolicyDrop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.toObject = function(opt_includeInstance) {
  return proto.dapr.proto.common.v1.JobFailurePolicyConstant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dapr.proto.common.v1.JobFailurePolicyConstant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.toObject = function(includeInstance, msg) {
  var f, obj = {
    interval: (f = msg.getInterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    maxRetries: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicyConstant}
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dapr.proto.common.v1.JobFailurePolicyConstant;
  return proto.dapr.proto.common.v1.JobFailurePolicyConstant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dapr.proto.common.v1.JobFailurePolicyConstant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicyConstant}
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxRetries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dapr.proto.common.v1.JobFailurePolicyConstant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dapr.proto.common.v1.JobFailurePolicyConstant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterval();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Duration interval = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.getInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicyConstant} returns this
*/
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.setInterval = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicyConstant} returns this
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.clearInterval = function() {
  return this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 max_retries = 2;
 * @return {number}
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.getMaxRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicyConstant} returns this
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.setMaxRetries = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dapr.proto.common.v1.JobFailurePolicyConstant} returns this
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.clearMaxRetries = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dapr.proto.common.v1.JobFailurePolicyConstant.prototype.hasMaxRetries = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.dapr.proto.common.v1);
